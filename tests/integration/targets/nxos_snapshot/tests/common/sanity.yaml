---
- ansible.builtin.debug:
    msg: START connection={{ ansible_connection }} nxos_snapshot sanity test

- set_fact: snapshot_run="true"

- set_fact: snapshot_run="false"
  when: titanium and (ansible_connection is match('nxapi'))

- set_fact: snapshot_run="false"
  when: platform is match('N35')

- set_fact: add_sec="true"

- set_fact: add_sec="false"
  when: imagetag is search("D1")

- block:
    - name: create snapshot
      register: result
      cisco.nxos.nxos_snapshot: &id001
        action: create
        snapshot_name: test_snapshot1
        description: Ansible
        save_snapshot_locally: true

    - assert: &id002
        that:
          - result.changed == true

    - name: Conf Idempotence
      register: result
      cisco.nxos.nxos_snapshot: *id001

    - assert: &id004
        that:
          - result.changed == false

    - block:
        - name: Add section
          register: result
          cisco.nxos.nxos_snapshot: &id003
            action: add
            section: myshow
            show_command: show ip interface brief
            row_id: ROW_intf
            element_key1: intf-name
            element_key2: intf-name

        - assert: *id002

        - name: Conf Idempotence
          register: result
          cisco.nxos.nxos_snapshot: *id003

        - assert: *id004
      when: add_sec

    - name: create another snapshot
      register: result
      cisco.nxos.nxos_snapshot: &id005
        action: create
        snapshot_name: test_snapshot2
        description: row
        section: myshow
        show_command: show ip interface brief
        row_id: ROW_intf
        element_key1: intf-name

    - assert: *id002

    - name: Conf Idempotence
      register: result
      cisco.nxos.nxos_snapshot: *id005

    - assert: *id004

    - name: compare snapshots
      cisco.nxos.nxos_snapshot:
        action: compare
        snapshot1: test_snapshot1
        snapshot2: test_snapshot2
        comparison_results_file: compare_snapshots.txt
        compare_option: summary
        path: .

    - name: delete snapshot
      register: result
      cisco.nxos.nxos_snapshot: &id006
        snapshot_name: test_snapshot2
        action: delete

    - assert: *id002

    - name: Conf Idempotence
      register: result
      cisco.nxos.nxos_snapshot: *id006

    - assert: *id004

    - name: delete all snapshots
      register: result
      cisco.nxos.nxos_snapshot: &id007
        action: delete_all

    - assert: *id002

    - name: Conf Idempotence
      register: result
      cisco.nxos.nxos_snapshot: *id007

    - assert: *id004
  when: snapshot_run
  always:
    - name: delete all sections
      ignore_errors: true
      cisco.nxos.nxos_config:
        commands:
          - snapshot section delete myshow
        match: none

    - name: delete all snapshots
      ignore_errors: true
      cisco.nxos.nxos_snapshot:
        action: delete_all

- ansible.builtin.debug:
    msg: END connection={{ ansible_connection }} nxos_snapshot sanity test
