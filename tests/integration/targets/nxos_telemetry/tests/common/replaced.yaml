---
- debug: msg="START connection={{ ansible_connection }} nxos_telemetry replaced
    sanity test"

- set_fact: source_interface="Loopback55"
  when: imagetag and (major_version is version_compare('9.1', 'ge'))

- set_fact: command_list_length=27

- set_fact: command_list_length=28
  when: imagetag and (major_version is version_compare('9.1', 'ge'))

- set_fact: dict_facts_length=6

- set_fact: dict_facts_length=7
  when: imagetag and (major_version is version_compare('9.1', 'ge'))

- name: Setup - disable feature telemetry
  ignore_errors: true
  cisco.nxos.nxos_feature: &id003
    feature: telemetry
    state: disabled

- name: Setup - enable feature telemetry
  cisco.nxos.nxos_feature:
    feature: telemetry
    state: enabled

- name: Setup - add initial telemetry config
  cisco.nxos.nxos_config:
    src: populate_config.cfg

- name: Setup - add initial source-interface telemetry config
  when: imagetag and (major_version is version_compare('9.1', 'ge'))
  cisco.nxos.nxos_config:
    lines:
      - "telemetry"
      - "  destination-profile"
      - "    source-interface loopback55"

- block:

    - name: Gather Telemetry Facts Before Changes
      cisco.nxos.nxos_facts: &id001
        gather_subset:
          - '!all'
          - '!min'
        gather_network_resources:
          - telemetry

    - name: Telemetry - replaced
      register: result
      cisco.nxos.nxos_telemetry: &id002
        state: replaced
        config:
          certificate:
            key: /file_dir/new_server.key
            hostname: newhost.example.com
          vrf: management
          compression: gzip
          destination_groups:

            - id: 2
              destination:
                ip: 192.168.0.1
                port: 65001
                protocol: grpc
                encoding: gpb

            - id: 2
              destination:
                ip: 192.168.0.3
                port: 55001
                protocol: grpc
                encoding: gpb
          sensor_groups:

            - id: 100
              data_source: NX-API
              path:
                name: '"show bgp l2vpn evpn summary"'
                depth: unbounded
                query_condition: foo
                filter_condition: foo
          subscriptions:

            - id: 99
              destination_group: 2
              sensor_group:
                id: 100
                sample_interval: 2000

    - assert:
        that:
          - result.changed == true
          - result.before|length == {{ dict_facts_length }}
          - result.before.certificate|length == 2
          - result.before.destination_groups|length == 7
          - result.before.sensor_groups|length == 8
          - result.before.subscriptions|length == 10
          - "'telemetry' in result.commands"
          - "'no subscription 55' in result.commands"
          - "'subscription 99' in result.commands"
          - "'no dst-grp 99' in result.commands"
          - "'no snsr-grp 8 sample-interval 90000' in result.commands"
          - "'no snsr-grp 77 sample-interval 2000' in result.commands"
          - "'no subscription 44' in result.commands"
          - "'no sensor-group 55' in result.commands"
          - "'no sensor-group 8' in result.commands"
          - "'no sensor-group 2' in result.commands"
          - "'no sensor-group 77' in result.commands"
          - "'no destination-group 99' in result.commands"
          - "'no destination-group 10' in result.commands"
          - "'destination-group 2' in result.commands"
          - "'no ip address 192.168.0.1 port 50001 protocol grpc encoding gpb' in\
            \ result.commands"
          - "'no ip address 192.168.0.2 port 60001 protocol grpc encoding gpb' in\
            \ result.commands"
          - "'destination-group 2' in result.commands"
          - "'ip address 192.168.0.1 port 65001 protocol grpc encoding gpb' in result.commands"
          - "'ip address 192.168.0.3 port 55001 protocol grpc encoding gpb' in result.commands"
          - "'sensor-group 100' in result.commands"
          - result.commands is search("path .*show bgp l2vpn evpn summary.* depth
            unbounded query-condition foo filter-condition foo")
          - "'data-source NX-API' in result.commands"
          - "'subscription 99' in result.commands"
          - "'snsr-grp 100 sample-interval 2000' in result.commands"
          - "'certificate /file_dir/new_server.key newhost.example.com' in result.commands"
          - "'destination-profile' in result.commands"
          - "'use-vrf management' in result.commands"
          - result.commands|length == {{ command_list_length }}

    - assert:
        that:
          - "'no source-interface loopback55' in result.commands"
      when: imagetag and (major_version is version_compare('9.1', 'ge'))

    - assert:
        that:
          - (ansible_facts.network_resources.telemetry|dict2items)|symmetric_difference(result.before|dict2items)|length
            == 0

    - name: Gather Telemetry Facts After Changes
      cisco.nxos.nxos_facts: *id001

    - assert:
        that:
          - (ansible_facts.network_resources.telemetry|dict2items)|symmetric_difference(result.after|dict2items)|length
            == 0

    - name: Telemetry - replaced - idempotence
      register: result
      cisco.nxos.nxos_telemetry: *id002

    - assert:
        that:
          - result.changed == false
          - result.commands|length == 0
  always:

    - name: Teardown
      ignore_errors: true
      cisco.nxos.nxos_feature: *id003

    - debug: msg="END connection={{ ansible_connection }} nxos_telemetry replaced
        sanity test"
