---
- ansible.builtin.debug:
    msg: START connection={{ ansible_connection }} nxos_vxlan_vtep sanity test

- block:
    - name: Set a fact for 'global_mcast_group_l2'
      ansible.builtin.set_fact:
        global_mcast_group_L2: 225.1.1.2

    - name: Set a fact for 'def_global_mcast_group_l2'
      ansible.builtin.set_fact:
        def_global_mcast_group_L2: default

    - block:
        - set_fact: global_mcast_group_L3="225.1.1.1"

        - set_fact: def_global_mcast_group_L3="default"

        - set_fact: global_ingress_replication_bgp="true"

        - set_fact: def_global_ingress_replication_bgp="false"
      when: false

    - name: Tcam resource check for global_suppress_arp
      connection: ansible.netcommon.network_cli
      register: tcam_state
      cisco.nxos.nxos_command:
        commands:
          - command: show hardware access-list tcam region | incl arp-ether | sed 's/.*size = *//'
            output: text

    - block:
        - set_fact: global_suppress_arp="true"

        - set_fact: def_global_suppress_arp="false"
      when: tcam_state.stdout[0]|int > 0
  when: platform is search('N9K') and (major_version is version('9.2', 'ge'))

- block:
    - name: Apply N7K specific setup configuration
      ansible.builtin.include_tasks: targets/nxos_vxlan_vtep/tasks/platform/n7k/setup.yaml
      when: platform is match('N7K')

    - name: Enable 'feature nv overlay'
      cisco.nxos.nxos_config:
        commands:
          - feature nv overlay
          - nv overlay evpn
        match: none

    - block:
        - name: Enable feature ngmvpn
          cisco.nxos.nxos_config:
            commands:
              - feature ngmvpn
            match: none
      when: global_mcast_group_L3 is defined

    - block:
        - name: configure vxlan_vtep
          register: result
          cisco.nxos.nxos_vxlan_vtep: &id001
            interface: nve1
            description: abcd
            host_reachability: true
            source_interface: Loopback0
            source_interface_hold_down_time: 30
            global_ingress_replication_bgp: "{{ global_ingress_replication_bgp|default(omit) }}"
            global_suppress_arp: "{{ global_suppress_arp|default(omit) }}"
            global_mcast_group_L3: "{{ global_mcast_group_L3|default(omit) }}"
            shutdown: false

        - assert: &id002
            that:
              - result.changed == true

        - name: Conf Idempotence
          register: result
          cisco.nxos.nxos_vxlan_vtep: *id001

        - assert: &id004
            that:
              - result.changed == false

        - name: reset vxlan_vtep
          register: result
          cisco.nxos.nxos_vxlan_vtep: &id003
            interface: nve1
            description: default
            host_reachability: false
            source_interface_hold_down_time: default
            source_interface: default
            global_ingress_replication_bgp: "{{ def_global_ingress_replication_bgp|default(omit) }}"
            global_suppress_arp: "{{ def_global_suppress_arp|default(omit) }}"
            global_mcast_group_L3: "{{ def_global_mcast_group_L3|default(omit) }}"
            shutdown: true

        - assert: *id002

        - name: reset Idempotence
          register: result
          cisco.nxos.nxos_vxlan_vtep: *id003

        - assert: *id004

        - name: configure global mcast L2
          register: result
          cisco.nxos.nxos_vxlan_vtep: &id005
            interface: nve1
            host_reachability: true
            global_mcast_group_L2: "{{ global_mcast_group_L2|default(omit) }}"

        - assert: *id002

        - name: Conf Idempotence
          register: result
          cisco.nxos.nxos_vxlan_vtep: *id005

        - assert: *id004

        - name: reset global mcast L2
          register: result
          cisco.nxos.nxos_vxlan_vtep: &id006
            interface: nve1
            host_reachability: false
            global_mcast_group_L2: "{{ def_global_mcast_group_L2|default(omit) }}"

        - assert: *id002

        - name: reset Idempotence
          register: result
          cisco.nxos.nxos_vxlan_vtep: *id006

        - assert: *id004
      when: (platform is search('N9K'))

    - block:
        - name: configure vxlan_vtep
          register: result
          cisco.nxos.nxos_vxlan_vtep: &id007
            interface: nve1
            description: default
            host_reachability: true
            source_interface: Loopback0
            shutdown: false

        - assert:
            that:
              - result.changed == true

        - name: Conf Idempotence
          register: result
          cisco.nxos.nxos_vxlan_vtep: *id007

        - assert:
            that:
              - result.changed == false

        - name: reset vxlan_vtep
          register: result
          cisco.nxos.nxos_vxlan_vtep: &id008
            interface: nve1
            description: default
            host_reachability: false
            source_interface: default
            shutdown: true

        - assert: *id002

        - name: reset Idempotence
          register: result
          cisco.nxos.nxos_vxlan_vtep: *id008

        - assert: *id004
      when: (platform is search('N7K'))

    - name: Remove vxlan_vtep
      register: result
      cisco.nxos.nxos_vxlan_vtep: &id009
        interface: nve1
        description: default
        host_reachability: true
        source_interface: Loopback0
        source_interface_hold_down_time: 30
        shutdown: true
        state: absent

    - ansible.builtin.assert:
        that:
          - result.changed == true

    - name: Remove idempotence
      register: result
      cisco.nxos.nxos_vxlan_vtep: *id009

    - ansible.builtin.assert:
        that:
          - result.changed == false
  when: (platform is search("N7K|N9K"))
  always:
    - name: Apply N7K specific cleanup configuration
      ansible.builtin.include_tasks: targets/nxos_vxlan_vtep/tasks/platform/n7k/cleanup.yaml
      when: platform is match('N7K')

    - name: Disable NV overlay EVPN
      ignore_errors: true
      cisco.nxos.nxos_config:
        commands:
          - no nv overlay evpn
        match: none

    - name: Disable 'feature nv overlay'
      ignore_errors: true
      cisco.nxos.nxos_feature:
        feature: nve
        state: disabled

- ansible.builtin.debug:
    msg: END connection={{ ansible_connection }} nxos_vxlan_vtep sanity test
