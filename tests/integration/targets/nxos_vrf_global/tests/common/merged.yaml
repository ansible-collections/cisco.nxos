---
- ansible.builtin.debug:
    msg: START Merged nxos_vrf_global state for integration tests on connection={{ ansible_connection }}

- ansible.builtin.include_tasks: _remove_config.yaml
- ansible.builtin.include_tasks: _check_device.yaml

- block:
    - name: Set config to test based on device # As some devices do not support some of the attributes
      ansible.builtin.set_fact:
        symmetric_diff:
          - ip multicast multipath legacy
          - ipv6 multicast group-range prefix-list temp
          - multicast service-reflect interface Ethernet1/1 map interface Ethernet2/2
          - multicast service-reflect interface Ethernet2/1 map interface Ethernet4/2
        vrfConfig:
          vrfs:
            - description: this-is-test
              ip:
                auto_discard: true
                domain_list:
                  - example.net
                domain_name: example.org
                icmp_err:
                  source_interface:
                    interface: port-channel
                    interface_value: "1"
                igmp:
                  ssm_translate:
                    - group: 232.0.0.0/8
                      source: 10.1.1.1
                    - group: 239.1.2.0/24
                      source: 192.168.1.1
                mroutes:
                  - group: 192.168.1.0/24
                    source: 192.168.1.1
                  - group: 192.168.1.0/24
                    preference: 2
                    source: 192.168.1.2
                    vrf: temp
                multicast:
                  multipath:
                    resilient: true
                  rpf:
                    - group_list_range: 238.1.0.0/24
                      vrf_name: temp
                    - group_list_range: 239.1.0.0/24
                      vrf_name: temp
                name_server:
                  address_list:
                    - 192.168.0.1
                    - 192.168.0.2
                    - 192.168.1.1
                    - 192.169.1.3
                  use_vrf:
                    source_address: 192.168.0.1
                    vrf: temp
                route:
                  - destination: 192.0.2.22
                    source: 192.0.0.0/24
                  - destination: 192.0.2.22
                    source: 192.0.0.0/24
                    vrf: temp
                  - destination: 192.0.2.22
                    source: 192.0.2.0/24
                    tags:
                      route_pref: 4
                      tag_value: 2
              ipv6:
                mld_ssm_translate:
                  - group: ff28::/16
                    source: 2001:db8:0:abcd::2
                  - group: ff30::/16
                    source: 2001:db8:0:abcd::5
                multicast:
                  multipath:
                    resilient: true
                    splitting_type:
                      none: true
              name: VRF7
              vni:
                vni_number: 5

    - name: Update Fact based on device
      ansible.utils.update_fact:
        updates:
          - path: vrfConfig.vrfs.0.ip.multicast.multipath.splitting_type
            value: true
          - path: vrfConfig.vrfs.0.ipv6.multicast.group_range_prefix_list
            value: temp
          - path: vrfConfig.vrfs.0.multicast
            value:
              service_reflect:
                - map_to: Ethernet2/2
                  service_interface: Ethernet1/1
                - map_to: Ethernet4/2
                  service_interface: Ethernet2/1
      when: not isci
      register: updated_fact

    - name: Set final test config
      ansible.builtin.set_fact:
        vrfConfig: "{{ updated_fact.vrfConfig }}"
      when: not isci

    - name: Set final commands to test against
      ansible.builtin.set_fact:
        final_commands: "{{ merged['commands'] | difference(symmetric_diff) if isci else merged['commands'] }}"

    - name: Update after dict to test against
      ansible.utils.update_fact:
        updates:
          - path: merged.after.vrfs.0.ip.multicast.multipath.splitting_type
            value: true
          - path: merged.after.vrfs.0.ipv6.multicast.group_range_prefix_list
            value: temp
          - path: merged.after.vrfs.0.multicast
            value:
              service_reflect:
                - map_to: Ethernet2/2
                  service_interface: Ethernet1/1
                - map_to: Ethernet4/2
                  service_interface: Ethernet2/1
      register: updated_after

    - name: Set final dict to test against
      ansible.builtin.set_fact:
        updated_after: "{{ updated_after.merged.after.vrfs if not isci else merged['after']['vrfs'] }}"

    - name: Merge provided configuration with device configuration
      register: result
      cisco.nxos.nxos_vrf_global: &id001
        config: "{{ vrfConfig }}"
        state: merged

    - name: Remove management from list of result
      set_fact:
        res_before:
          before:
            vrfs: "{{ result['before']['vrfs'] | rejectattr('name', '==', 'management') }}"
        res_after:
          after:
            vrfs: "{{ result['after']['vrfs'] | rejectattr('name', '==', 'management') }}"

    - name: Assert that correct set of commands were generated
      ansible.builtin.assert:
        that:
          - "{{ final_commands | symmetric_difference(result['commands']) | length == 0 }}"

    - name: Assert that before dicts are correctly generated
      ansible.builtin.assert:
        that:
          - res_before['before']['vrfs'] == []

    - name: Assert that after dict is correctly generated
      ansible.builtin.assert:
        that:
          - res_after['after']['vrfs'] == updated_after

    - name: Merge provided configuration with device configuration (idempotent)
      register: result
      cisco.nxos.nxos_vrf_global: *id001

    - name: Assert that the previous task was idempotent
      ansible.builtin.assert:
        that:
          - result['changed'] == false

    - name: Wait for 20 seconds after merging
      ansible.builtin.wait_for:
        timeout: 20
  always:
    - ansible.builtin.include_tasks: _remove_config.yaml
