---
- ansible.builtin.debug:
    msg: "Start nxos_ntp_global merged integration tests connection={{ ansible_connection }}"

- ansible.builtin.include_tasks: _remove_config.yaml

- block:
    - name: Merge the provided configuration with the existing running configuration
      cisco.nxos.nxos_ntp_global: &id001
        config:
          access_group:
            peer:
              - access_list: PeerAcl1
            serve:
              - access_list: ServeAcl1
          authenticate: true
          logging: true
          master:
            stratum: 2
          peers:
            - peer: 192.0.2.1
              key_id: 1
              maxpoll: 15
              minpoll: 5
              vrf: default
            - peer: 192.0.2.2
              key_id: 2
              prefer: true
              vrf: siteA
          servers:
            - server: 198.51.100.1
              key_id: 2
              vrf: default
            - server: 203.0.113.1
              key_id: 1
              vrf: siteB
      register: result

    - name: Assert that before dicts were correctly generated
      ansible.builtin.assert:
        that: "{{ result['before'] == {} }}"

    - name: Assert that correct set of commands were generated
      ansible.builtin.assert:
        that:
          - "{{ merged['commands'] | symmetric_difference(result['commands']) |length == 0 }}"

    - name: Assert that after dicts were correctly generated
      ansible.builtin.assert:
        that:
          - "{{ merged['after'] == result['after'] }}"

    - name: Merge the provided configuration with the existing running configuration (idempotent)
      cisco.nxos.nxos_ntp_global: *id001
      register: result

    - name: Assert that the previous task was idempotent
      ansible.builtin.assert:
        that:
          - result['changed'] == false
          - result.commands|length == 0

    - name: Attempt to configure non-existent auth key (should fail)
      cisco.nxos.nxos_ntp_global:
        config:
          trusted_keys:
            - key_id: 12344
      register: result
      ignore_errors: true

    - ansible.builtin.assert:
        that:
          - "result.failed == True"

  always:
    - ansible.builtin.include_tasks: _remove_config.yaml
