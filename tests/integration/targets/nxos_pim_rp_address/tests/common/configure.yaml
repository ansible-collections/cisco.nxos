---
- ansible.builtin.debug:
    msg: START connection={{ ansible_connection }} nxos_pim_rp_address sanity

- block:
    - name: Set a fact for 'bidir_true'
      ansible.builtin.set_fact:
        bidir_true: true

    - name: Set a fact for 'bidir_false'
      ansible.builtin.set_fact:
        bidir_false: false
  when: platform is not search('N3L')

- block:
    - name: Set a fact for 'pim_prefix_list'
      ansible.builtin.set_fact:
        pim_prefix_list: pim_prefix_list

    - name: Set a fact for 'pim_route_map'
      ansible.builtin.set_fact:
        pim_route_map: pim_route_map
  when: platform is not search('N3L|N7K')

- block:
    - name: Disable 'feature pim'
      cisco.nxos.nxos_feature: &id014
        feature: pim
        state: disabled

    - name: Enable 'feature pim'
      cisco.nxos.nxos_feature:
        feature: pim
        state: enabled

    - name: 1.0 configure rp_address + group_list
      register: result
      cisco.nxos.nxos_pim_rp_address: &id001
        rp_address: 10.1.1.1
        group_list: 224.0.0.0/8
        bidir: "{{ bidir_true|default(omit) }}"
        state: present

    - ansible.builtin.assert: &id002
        that:
          - result.changed == true

    - name: 1.0 idempotence rp_address + group_list
      register: result
      cisco.nxos.nxos_pim_rp_address: *id001

    - ansible.builtin.assert: &id004
        that:
          - result.changed == false

    - block:
        - name: 1.1 Configure rp_address + group_list (bidir_false)
          register: result
          cisco.nxos.nxos_pim_rp_address: &id003
            rp_address: 10.1.1.1
            group_list: 224.0.0.0/8
            bidir: false
            state: present

        - assert: *id002

        - name: 1.1 Idempotence rp_address + group_list (bidir_false)
          register: result
          cisco.nxos.nxos_pim_rp_address: *id003

        - assert: *id004

        - name: 1.2 Configure rp_address (bidir_true)
          register: result
          cisco.nxos.nxos_pim_rp_address: &id005
            rp_address: 10.1.1.1
            bidir: true
            state: present

        - assert: *id002

        - name: 1.2 Idempotence rp_address (bidir_true)
          register: result
          cisco.nxos.nxos_pim_rp_address: *id005

        - assert: *id004

        - name: 1.3 Configure rp_address (bidir_false)
          register: result
          cisco.nxos.nxos_pim_rp_address: &id006
            rp_address: 10.1.1.1
            bidir: false
            state: present

        - assert: *id002

        - name: 1.3 Idempotence rp_address (bidir_false)
          register: result
          cisco.nxos.nxos_pim_rp_address: *id006

        - assert: *id004
      when: bidir_true is defined

    - name: 1.4 remove rp_address + group_list
      register: result
      cisco.nxos.nxos_pim_rp_address: &id007
        rp_address: 10.1.1.1
        group_list: 224.0.0.0/8
        state: absent

    - ansible.builtin.assert: *id002

    - name: 1.4 idempotence remove rp_address + group_list
      register: result
      cisco.nxos.nxos_pim_rp_address: *id007

    - ansible.builtin.assert: *id004

    - name: 2.0 configure rp_address + prefix_list (bidir_true)
      register: result
      cisco.nxos.nxos_pim_rp_address: &id008
        rp_address: 10.1.1.2
        prefix_list: "{{ pim_prefix_list|default(omit) }}"
        bidir: "{{ bidir_true|default(omit) }}"
        state: present

    - ansible.builtin.assert: *id002

    - name: 2.0 idempotence rp_address + prefix_list (bidir_true)
      register: result
      cisco.nxos.nxos_pim_rp_address: *id008

    - ansible.builtin.assert: *id004

    - block:
        - name: 2.1 Configure rp_address + prefix_list (bidir_false)
          register: result
          cisco.nxos.nxos_pim_rp_address: &id009
            rp_address: 10.1.1.2
            prefix_list: "{{ pim_prefix_list|default(omit) }}"
            bidir: "{{ bidir_false|default(omit) }}"
            state: present

        - assert: *id002

        - name: 2.1 Idempotence rp_address + prefix_list (bidir_false)
          register: result
          cisco.nxos.nxos_pim_rp_address: *id009

        - assert: *id004
      when: bidir_false is defined

    - name: 2.2 remove rp_address + prefix_list (bidir_false)
      register: result
      cisco.nxos.nxos_pim_rp_address: &id010
        rp_address: 10.1.1.2
        prefix_list: "{{ pim_prefix_list|default(omit)}}"
        bidir: "{{ bidir_false|default(omit)}}"
        state: absent

    - ansible.builtin.assert: *id002

    - name: 2.2 idempotence remove rp_address + prefix_list (bidir_false)
      register: result
      cisco.nxos.nxos_pim_rp_address: *id010

    - ansible.builtin.assert: *id004

    - name: 3.0 configure rp_address + route_map + (bidir_true)
      register: result
      cisco.nxos.nxos_pim_rp_address: &id011
        rp_address: 10.1.1.3
        route_map: "{{ pim_route_map|default(omit)}}"
        bidir: "{{ bidir_true|default(omit) }}"
        state: present

    - ansible.builtin.assert: *id002

    - name: 3.0 idempotence rp_address + route_map + (bidir_true)
      register: result
      cisco.nxos.nxos_pim_rp_address: *id011

    - ansible.builtin.assert: *id004

    - block:
        - name: 3.1 Configure rp_address + route_map (bidir_false)
          register: result
          cisco.nxos.nxos_pim_rp_address: &id012
            rp_address: 10.1.1.3
            route_map: "{{ pim_route_map|default(omit)}}"
            bidir: "{{ bidir_false|default(omit)}}"
            state: present

        - assert: *id002

        - name: 3.1 Idempotence rp_address + route_map
          register: result
          cisco.nxos.nxos_pim_rp_address: *id012

        - assert: *id004
      when: bidir_false is defined

    - name: 3.2 remove rp_address + route_map (bidir_false)
      register: result
      cisco.nxos.nxos_pim_rp_address: &id013
        rp_address: 10.1.1.3
        route_map: "{{ pim_route_map|default(omit)}}"
        bidir: "{{ bidir_false|default(omit)}}"
        state: absent

    - ansible.builtin.assert: *id002

    - name: 3.2 idempotence remove rp_address + route_map (bidir_false)
      register: result
      cisco.nxos.nxos_pim_rp_address: *id013

    - ansible.builtin.assert: *id004
  always:
    - name: Disable 'feature pim'
      cisco.nxos.nxos_feature: *id014

- ansible.builtin.debug:
    msg: END connection={{ ansible_connection }} nxos_pim_rp_address sanity
