---
- ansible.builtin.debug:
    msg: START connection={{ ansible_connection }} nxos_static_route sanity test

- name: Set a fact for 'test_track_feature'
  ansible.builtin.set_fact:
    test_track_feature: true

- name: Configure track
  register: cmd_result
  ignore_errors: true
  cisco.nxos.nxos_config:
    lines:
      - track 1 ip sla 1

- ansible.builtin.debug:
    msg: cmd result {{ cmd_result }}

- name: Set a fact for 'test_track_feature'
  ansible.builtin.set_fact:
    test_track_feature: false
  when: cmd_result.failed

- ansible.builtin.debug:
    msg: Test Track Feature {{ test_track_feature }}

- name: Setup and teardown, remove test routes if present
  with_items: "{{ vrfs }}"
  ignore_errors: true
  cisco.nxos.nxos_static_route: &id009
    aggregate:
      - prefix: 192.168.1.164/32
        next_hop: 192.0.2.3

      - prefix: 192.168.20.64/24
        next_hop: 192.0.2.3

      - prefix: 192.168.22.64/24
        next_hop: 192.0.2.3

      - prefix: 192.168.24.64/24
        next_hop: 192.0.2.3
    vrf: "{{ item }}"
    state: absent

- name: Setup noise routes to ensure testing while non-test routes present
  with_items: "{{ vrfs }}"
  cisco.nxos.nxos_static_route:
    prefix: 192.168.1.164/32
    next_hop: 192.0.2.3
    vrf: "{{ item }}"
    state: present

- block:
    - name: Create static route
      with_items: "{{ vrfs }}"
      register: result
      cisco.nxos.nxos_static_route: &id001
        prefix: 192.168.20.64/24
        next_hop: 192.0.2.3
        route_name: testing
        pref: 100
        tag: 5500
        vrf: "{{ item }}"

    - ansible.builtin.assert: &id002
        that:
          - result.changed == true

    - name: Configure static idempotence
      with_items: "{{ vrfs }}"
      register: result
      cisco.nxos.nxos_static_route: *id001

    - ansible.builtin.assert: &id004
        that:
          - result.changed == false

    - name: Change static route
      with_items: "{{ vrfs }}"
      register: result
      cisco.nxos.nxos_static_route: &id003
        prefix: 192.168.20.64/24
        next_hop: 192.0.2.3
        route_name: default
        pref: 10
        tag: default
        vrf: "{{ item }}"

    - ansible.builtin.assert: *id002

    - name: Change idempotence
      with_items: "{{ vrfs }}"
      register: result
      cisco.nxos.nxos_static_route: *id003

    - ansible.builtin.assert: *id004

    - name: Configure static route with track
      with_items: "{{ vrfs }}"
      register: result
      when: test_track_feature
      cisco.nxos.nxos_static_route: &id005
        prefix: 192.168.20.64/24
        next_hop: 192.0.2.3
        route_name: default
        pref: 10
        tag: default
        track: 1
        vrf: "{{ item }}"

    - ansible.builtin.assert: *id002
      when: test_track_feature

    - name: Config track idempotence
      with_items: "{{ vrfs }}"
      register: result
      when: test_track_feature
      cisco.nxos.nxos_static_route: *id005

    - ansible.builtin.assert: *id004
      when: test_track_feature

    - name: Configure static route with not configured track
      with_items: "{{ vrfs }}"
      register: result
      ignore_errors: true
      when: test_track_feature
      cisco.nxos.nxos_static_route:
        prefix: 192.168.20.64/24
        next_hop: 192.0.2.3
        route_name: default
        pref: 10
        tag: default
        track: 2
        vrf: "{{ item }}"

    - ansible.builtin.assert:
        that:
          - result.failed == True
      when: test_track_feature

    - name: Remove static route
      with_items: "{{ vrfs }}"
      register: result
      cisco.nxos.nxos_static_route: &id006
        prefix: 192.168.20.64/24
        next_hop: 192.0.2.3
        route_name: testing
        pref: 100
        vrf: "{{ item }}"
        state: absent

    - ansible.builtin.assert: *id002

    - name: Remove idempotence
      with_items: "{{ vrfs }}"
      register: result
      cisco.nxos.nxos_static_route: *id006

    - ansible.builtin.assert: *id004

    - name: Configure static route(aggregate)
      register: result
      cisco.nxos.nxos_static_route: &id007
        aggregate:
          - prefix: 192.168.22.64/24
            next_hop: 192.0.2.3

          - prefix: 192.168.24.64/24
            next_hop: 192.0.2.3

    - ansible.builtin.assert: *id002

    - name: Configure static route aggregate(idempotence)
      register: result
      cisco.nxos.nxos_static_route: *id007

    - ansible.builtin.assert: *id004

    - name: Remove static route aggregate
      register: result
      cisco.nxos.nxos_static_route: &id008
        aggregate:
          - prefix: 192.168.22.64/24
            next_hop: 192.0.2.3

          - prefix: 192.168.24.64/24
            next_hop: 192.0.2.3
        state: absent

    - ansible.builtin.assert: *id002

    - name: Remove static route aggregate(idempotence)
      register: result
      cisco.nxos.nxos_static_route: *id008

    - ansible.builtin.assert: *id004
  always:
    - name: Remove track
      ignore_errors: true
      when: test_track_feature
      cisco.nxos.nxos_config:
        lines:
          - no track 1

    - name: Teardown test routes
      with_items: "{{ vrfs }}"
      ignore_errors: true
      cisco.nxos.nxos_static_route: *id009

- ansible.builtin.debug:
    msg: END connection={{ ansible_connection }} nxos_static_route sanity test
