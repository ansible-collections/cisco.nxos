---
- ansible.builtin.debug:
    msg: START nxos_file_copy negative test

- name: Set a fact for 'test_destination_file' and 'test_source_file'
  ansible.builtin.set_fact:
    test_source_file: "data.cfg"
    test_destination_file: "test_destination_file"

- name: Attempt to copy file to invalid file_system
  register: result
  ignore_errors: true
  cisco.nxos.nxos_file_copy:
    file_pull: false
    local_file: "{{ role_path }}/fixtures/{{ test_source_file }}"
    file_system: "invalid_media_type:"
    connect_ssh_port: "{{ ansible_ssh_port|d(22) }}"

- ansible.builtin.assert:
    that:
      - result is search('Invalid nxos filesystem invalid_media_type:')

- name: Attempt to copy source file that does not exist on ansible controller
  register: result
  ignore_errors: true
  cisco.nxos.nxos_file_copy:
    file_pull: false
    local_file: ./{{ test_source_file }}_does_not_exist
    file_system: "bootflash:"
    connect_ssh_port: "{{ ansible_ssh_port|d(22) }}"

- ansible.builtin.assert:
    that:
      - result is search('Local file ./data.cfg_does_not_exist not found')

- name: Try and copy file using an invalid remote scp server name
  register: result
  ignore_errors: true
  cisco.nxos.nxos_file_copy:
    file_pull: true
    file_pull_timeout: 10
    remote_file: "{{ role_path }}/fixtures/{{ test_source_file }}"
    local_file: "{{ test_destination_file }}_copy"
    local_file_directory: dir1/dir2/dir3
    remote_scp_server: scp_server_gone.example.com
    remote_scp_server_user: "{{ ansible_ssh_user }}"
    remote_scp_server_password: "{{ temp_passwd }}"
    connect_ssh_port: "{{ ansible_ssh_port|d(22) }}"

- ansible.builtin.assert:
    that:
      - result.changed == false
      - result.failed == True
      - "'Could not resolve hostname' in result.module_stderr"

# file_pull_timeout > 30s has no effect in this case, since the device
# shell gives up connecting to the bad IP after 30s and the response
# on the shell triggers a standard error regex.
- name: Try and copy file using an invalid remote scp server IP address
  register: result
  ignore_errors: true
  cisco.nxos.nxos_file_copy:
    file_pull: true
    file_pull_timeout: 300
    remote_file: /{{ test_destination_file }}
    local_file: "{{ test_destination_file }}_copy"
    local_file_directory: dir1/dir2/dir3
    remote_scp_server: 192.168.55.55
    remote_scp_server_user: "{{ ansible_ssh_user }}"
    remote_scp_server_password: "{{ temp_passwd }}"
    connect_ssh_port: "{{ ansible_ssh_port|d(22) }}"

- ansible.builtin.assert:
    that:
      - result.changed == false
      - result.failed == True

- ansible.builtin.pause:
    seconds: 10

- name: Try and copy file using an invalid username
  register: result
  ignore_errors: true
  cisco.nxos.nxos_file_copy:
    file_pull: true
    file_pull_timeout: 10
    remote_file: /{{ test_destination_file }}
    local_file: "{{ test_destination_file }}_copy"
    local_file_directory: dir1/dir2/dir3
    remote_scp_server: "{{ mgmt0_ip }}"
    remote_scp_server_user: invalid_user_name
    remote_scp_server_password: "{{ temp_passwd }}"
    connect_ssh_port: "{{ ansible_ssh_port|d(22) }}"

- ansible.builtin.assert:
    that:
      - result.changed == false
      - result.failed == True
      - "'Too many authentication failures' in result.module_stderr"

- name: Try and copy file using an invalid password
  register: result
  ignore_errors: true
  cisco.nxos.nxos_file_copy:
    file_pull: true
    file_pull_timeout: 10
    remote_file: /{{ test_destination_file }}
    local_file: "{{ test_destination_file }}_copy"
    local_file_directory: dir1/dir2/dir3
    remote_scp_server: "{{ mgmt0_ip }}"
    remote_scp_server_user: "{{ ansible_ssh_user }}"
    remote_scp_server_password: invalid_password
    connect_ssh_port: "{{ ansible_ssh_port|d(22) }}"

- ansible.builtin.assert:
    that:
      - result.changed == false
      - result.failed == True
      - "'Too many authentication failures' in result.module_stderr"

- ansible.builtin.debug:
    msg: END nxos_file_copy negative test
