---
- ansible.builtin.debug:
    msg: START connection={{ ansible_connection }} nxos_file_copy sanity test

- name: Set a fact for 'test_destination_file' and 'test_source_file'
  ansible.builtin.set_fact:
    test_source_file: "data.cfg"
    test_destination_file: "test_destination_file"

- name: Set a fact for 'sftp_root_dir'
  ansible.builtin.set_fact:
    sftp_root_dir: "{% if major_version is version('9.2', 'ge') %}/bootflash{% else %}/{% endif %}"

- name: Setup - remove existing file
  ignore_errors: true
  cisco.nxos.nxos_command: &id002
    commands:
      - terminal dont-ask
      - delete {{ test_source_file }}
      - delete {{ test_destination_file }}
      - delete bootflash:/dir1/dir2/dir3/*
      - rmdir dir1/dir2/dir3
      - rmdir dir1/dir2
      - rmdir dir1

- name: Setup - turn on 'feature scp-server'
  cisco.nxos.nxos_feature:
    feature: scp-server
    state: enabled

- name: Setup - turn on 'feature sftp-server'
  cisco.nxos.nxos_feature:
    feature: sftp-server
    state: enabled

- name: Setup - backup admin password if ansible_user is not admin
  cisco.nxos.nxos_command:
    commands:
      - command: show running-config | include "username admin password"
  register: nxos_admin_password
  no_log: true
  when: ansible_user != "admin"

- name: Setup - change admin password if ansible_user is not admin
  cisco.nxos.nxos_user:
    name: admin
    configured_password: "{{ temp_passwd }}"
  when: ansible_user != "admin"

- block:
    - name: Copy {{ test_source_file }} file from ansible controller to bootflash
      register: result
      cisco.nxos.nxos_file_copy: &id001
        local_file: "{{ role_path }}/fixtures/{{ test_source_file }}"
        file_system: "bootflash:"
        connect_ssh_port: "{{ ansible_ssh_port|d(22) }}"

    - ansible.builtin.assert:
        that:
          - result.changed == true
          - "'bootflash:' in result.file_system"
          - "'/{{ test_source_file }}' in result.local_file"
          - "'{{ test_source_file }}' in result.remote_file"

          - "'Sent: File copied to remote device.' in result.transfer_status"

    - name: Idempotence - copy {{ test_source_file }} file from ansible controller to bootflash
      register: result
      cisco.nxos.nxos_file_copy: *id001

    - ansible.builtin.assert: &id004
        that:
          - result.changed == false

    - name: Setup - remove existing file
      register: result
      cisco.nxos.nxos_command: *id002

    - name: Copy {{ test_source_file }} file from ansible controller to bootflash renamed as {{ test_destination_file }}
      register: result
      cisco.nxos.nxos_file_copy: &id003
        local_file: "{{ role_path }}/fixtures/{{ test_source_file }}"
        remote_file: "{{ test_destination_file }}"
        file_system: "bootflash:"
        connect_ssh_port: "{{ ansible_ssh_port|d(22) }}"

    - ansible.builtin.assert:
        that:
          - result.changed == true
          - "'bootflash:' in result.file_system"
          - "'{{ test_source_file }}' in result.local_file"
          - "'{{ test_destination_file }}' in result.remote_file"
          - "'Sent: File copied to remote device.' in result.transfer_status"

    - name: Idempotence - copy {{ test_source_file }} file from ansible controller to bootflash renamed as {{ test_destination_file }}
      register: result
      cisco.nxos.nxos_file_copy: *id003

    - name: Verify file_pull true options have no impact when file_pull is false
      register: result
      cisco.nxos.nxos_file_copy:
        file_pull: false
        file_pull_timeout: 1200
        file_pull_compact: true
        file_pull_kstack: true
        local_file_directory: dir1/dir2/dir3
        remote_scp_server: "{{ inventory_hostname_short }}"
        remote_scp_server_user: temp_user
        remote_scp_server_password: "{{ temp_passwd }}"
        local_file: "{{ role_path }}/fixtures/{{ test_source_file }}"
        remote_file: "{{ test_destination_file }}"
        file_system: "bootflash:"
        connect_ssh_port: "{{ ansible_ssh_port|d(22) }}"

    - ansible.builtin.assert: *id004

    - name: Initiate copy from nxos device to copy {{ test_destination_file }} to bootflash:dir1/dir2/dir3/{{ test_destination_file }}_copy
      register: result
      cisco.nxos.nxos_file_copy: &id005
        file_pull: true
        file_pull_timeout: 30
        remote_file: /{{ test_destination_file }}
        local_file: "{{ test_destination_file }}_copy"
        local_file_directory: dir1/dir2/dir3
        remote_scp_server: "{{ mgmt0_ip }}"
        remote_scp_server_user: temp_user
        remote_scp_server_password: "{{ temp_passwd }}"
        connect_ssh_port: "{{ ansible_ssh_port|d(22) }}"

    - ansible.builtin.assert: &id006
        that:
          - result.changed == true
          - "'copy scp:' in result.copy_cmd"
          - "'bootflash:' in result.file_system"
          - "'bootflash:dir1/dir2/dir3/{{ test_destination_file }}_copy' in result.local_file"
          - "'/{{ test_destination_file }}' in result.remote_file"

          - "'Received: File copied/pulled to nxos device from remote scp server.' in result.transfer_status"
          - "'{{ mgmt0_ip }}' in result.remote_scp_server"

    - ansible.builtin.pause:
        seconds: 60

    - name: Overwrite the file
      register: result
      cisco.nxos.nxos_file_copy: *id005

    - ansible.builtin.assert: *id006

    - name: >-
        Initiate copy with sftp from nxos device to copy
        /bootflash/{{ test_destination_file }} to
        bootflash:dir2/dir2/dir3/{{ test_destination_file }}_another_copy
      register: result
      cisco.nxos.nxos_file_copy:
        file_pull: true
        file_pull_protocol: sftp
        file_pull_timeout: 60
        remote_file: "/bootflash/{{ test_destination_file }}"
        local_file: "{{ test_destination_file }}_another_copy"
        local_file_directory: dir1/dir2/dir3
        remote_scp_server: "{{ mgmt0_ip }}"
        remote_scp_server_user: temp_user
        remote_scp_server_password: "{{ temp_passwd }}"
        connect_ssh_port: "{{ ansible_ssh_port|d(22) }}"

    - ansible.builtin.assert:
        that:
          - result.changed == true
          - "'copy sftp:' in result.copy_cmd"
          - "'bootflash:' in result.file_system"
          - "'bootflash:dir1/dir2/dir3/{{ test_destination_file }}_another_copy' in result.local_file"
          - "'/bootflash/{{ test_destination_file }}' in result.remote_file"

          - "'Received: File copied/pulled to nxos device from remote scp server.' in result.transfer_status"
          - "'{{ mgmt0_ip }}' in result.remote_scp_server"

  always:
    - name: Remove file
      ignore_errors: true
      cisco.nxos.nxos_command: *id002

    - name: Recover the admin password if ansible_user is not admin
      cisco.nxos.nxos_config:
        lines:
          - "{{ nxos_admin_password['stdout_lines'][0][0] }}"
      no_log: true
      when: ansible_user != "admin"

    - name: Turn off 'feature scp-server'
      cisco.nxos.nxos_feature:
        feature: scp-server
        state: disabled

    - name: Turn off 'feature sftp-server'
      cisco.nxos.nxos_feature:
        feature: sftp-server
        state: disabled

    - ansible.builtin.debug:
        msg: END connection={{ ansible_connection }} nxos_file_copy sanity test
