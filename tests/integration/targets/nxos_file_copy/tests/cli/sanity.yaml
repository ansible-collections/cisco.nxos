---
- debug: msg="START connection={{ ansible_connection }} nxos_file_copy sanity test"

- set_fact: 
    test_source_file: "data.cfg"
    test_destination_file: "test_destination_file"

- name: Setup - Remove existing file
  ignore_errors: true
  cisco.nxos.nxos_command: &id002
    commands:
      - terminal dont-ask
      - delete {{ test_source_file }}
      - delete {{ test_destination_file }}
      - delete bootflash:/dir1/dir2/dir3/*
      - rmdir dir1/dir2/dir3
      - rmdir dir1/dir2
      - rmdir dir1

- name: Setup - Turn on feature scp-server
  cisco.nxos.nxos_feature:
    feature: scp-server
    state: enabled

- block:

    - name: Copy {{ test_source_file }} file from Ansible controller to bootflash
      register: result
      cisco.nxos.nxos_file_copy: &id001
        local_file: "{{ role_path }}/fixtures/{{ test_source_file }}"
        file_system: 'bootflash:'
        connect_ssh_port: '{{ ansible_ssh_port }}'

    - assert:
        that:
          - result.changed == true
          - "'bootflash:' in result.file_system"
          - "'/{{ test_source_file }}' in result.local_file"
          - "'{{ test_source_file }}' in result.remote_file"

          - "'Sent: File copied to remote device.' in result.transfer_status"

    - name: Idempotence - Copy {{ test_source_file }} file from Ansible controller
        to bootflash
      register: result
      cisco.nxos.nxos_file_copy: *id001

    - assert: &id004
        that:
          - result.changed == false

    - name: Setup - Remove existing file
      register: result
      cisco.nxos.nxos_command: *id002

    - name: Copy {{ test_source_file }} file from Ansible controller to bootflash
        renamed as {{ test_destination_file }}
      register: result
      cisco.nxos.nxos_file_copy: &id003
        local_file: "{{ role_path }}/fixtures/{{ test_source_file }}"
        remote_file: '{{ test_destination_file }}'
        file_system: 'bootflash:'
        connect_ssh_port: '{{ ansible_ssh_port }}'

    - assert:
        that:
          - result.changed == true
          - "'bootflash:' in result.file_system"
          - "'{{ test_source_file }}' in result.local_file"
          - "'{{ test_destination_file }}' in result.remote_file"

          - "'Sent: File copied to remote device.' in result.transfer_status"

    - name: Idempotence - Copy {{ test_source_file }} file from Ansible controller
        to bootflash renamed as {{ test_destination_file }}
      register: result
      cisco.nxos.nxos_file_copy: *id003

    - name: Verify file_pull true options have no impact when file_pull is false
      register: result
      cisco.nxos.nxos_file_copy:
        file_pull: false
        file_pull_timeout: 1200
        file_pull_compact: true
        file_pull_kstack: true
        local_file_directory: dir1/dir2/dir3
        remote_scp_server: '{{ inventory_hostname_short }}'
        remote_scp_server_user: temp_user
        remote_scp_server_password: '{{ temp_passwd }}'
        local_file: "{{ role_path }}/fixtures/{{ test_source_file }}"
        remote_file: '{{ test_destination_file }}'
        file_system: 'bootflash:'
        connect_ssh_port: '{{ ansible_ssh_port }}'

    - assert: *id004

    - name: Initiate copy from nxos device to copy {{ test_destination_file }} to
        bootflash:dir1/dir2/dir3/{{ test_destination_file }}_copy
      register: result
      cisco.nxos.nxos_file_copy: &id005
        file_pull: true
        file_pull_timeout: 30
        remote_file: /{{ test_destination_file }}
        local_file: '{{ test_destination_file }}_copy'
        local_file_directory: dir1/dir2/dir3
        remote_scp_server: '{{ mgmt0_ip }}'
        remote_scp_server_user: temp_user
        remote_scp_server_password: "{{ temp_passwd }}"
        connect_ssh_port: '{{ ansible_ssh_port }}'
        
    - assert: &id006
        that:
          - result.changed == true
          - "'copy scp:' in result.copy_cmd"
          - "'bootflash:' in result.file_system"
          - "'bootflash:dir1/dir2/dir3/{{ test_destination_file }}_copy' in result.local_file"
          - "'/{{ test_destination_file }}' in result.remote_file"

          - "'Received: File copied/pulled to nxos device from remote scp server.'\
            \ in result.transfer_status"
          - "'{{ mgmt0_ip }}' in result.remote_scp_server"

    - name: Overwrite the file
      register: result
      cisco.nxos.nxos_file_copy: *id005

    - assert: *id006
  
  always:
    - name: Remove file
      ignore_errors: true
      cisco.nxos.nxos_command: *id002

    - name: Turn off feature scp-server
      cisco.nxos.nxos_feature:
        feature: scp-server
        state: disabled

    - debug: msg="END connection={{ ansible_connection }} nxos_file_copy sanity
        test"
