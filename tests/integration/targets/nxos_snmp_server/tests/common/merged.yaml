---
- ansible.builtin.debug:
    msg: "Start nxos_snmp_server merged integration tests connection={{ ansible_connection }}"

- ansible.builtin.include_tasks: _remove_config.yaml

- block:
    - name: Merge the provided configuration with the existing running configuration
      cisco.nxos.nxos_snmp_server: &id001
        config:
          aaa_user:
            cache_timeout: 36000
          communities:
            - name: private
              group: network-admin
              ro: true
              use_ipv4acl: PNB_SNMPv2c_ACL_UAW3n9YtXghpgOJ
            - name: public
              group: network-operator
          contact: nxosswitchadmin@localhost
          location: serverroom-1
          traps:
            aaa:
              server_state_change: true
            system:
              clock_change_notification: true
          hosts:
            - host: 192.0.2.1
              traps: true
              version: "1"
              community: public
            - host: 192.0.2.1
              source_interface: Ethernet1/1
            - host: 192.0.2.2
              informs: true
              version: "3"
              auth: NMS
          users:
            auth:
              - user: snmp_user_1
                group: network-operator
                authentication:
                  algorithm: md5
                  password: "0x5632724fb8ac3699296af26281e1d0f1"
                  localized_key: true
              - user: snmp_user_2
                group: network-operator
                authentication:
                  algorithm: md5
                  password: "0x5632724fb8ac3699296af26281e1d0f1"
                  localized_key: true
                  priv:
                    privacy_password: "0x5632724fb8ac3699296af26281e1d0f1"
                    aes_128: true
            use_acls:
              - user: snmp_user_1
                ipv4: acl1
                ipv6: acl2
              - user: snmp_user_2
                ipv4: acl3
                ipv6: acl4
      register: result

    - name: Show before
      ansible.builtin.debug:
        msg: "{{ merged['before'] }}"

    - name: Show after
      ansible.builtin.debug:
        msg: "{{ merged['after'] }}"

    - name: Assert that the 'before' user configurations were correctly generated
      ansible.builtin.assert:
        that:
          - (result.before.users.auth | selectattr('user', 'equalto', item.user) | list | first) == item
        fail_msg: >-
          The 'before' configuration for user '{{ item.user }}' is incorrect.
        success_msg: "The 'before' configuration for user '{{ item.user }}' is correct."
      loop: "{{ merged['before']['users']['auth'] }}"
      loop_control:
        label: "Asserting user: {{ item.user }}"

    - name: Assert that correct set of commands were generated
      ansible.builtin.assert:
        that:
          - "{{ merged['commands'] | symmetric_difference(result['commands']) |length == 0 }}"

    - name: Assert that 'after' contact/location/aaa_user/traps configurations were correctly generated
      ansible.builtin.assert:
        that:
          - result.after.contact == merged.after.contact
          - result.after.location == merged.after.location
          - result.after.aaa_user == merged.after.aaa_user
          - result.after.traps == merged.after.traps

    - name: Assert that 'after' community configurations are correctly generated
      ansible.builtin.assert:
        that:
          - (result.after.communities | selectattr('name', 'equalto', item.name) | list | first) == item
        fail_msg: "The 'after' configuration for community '{{ item.name }}' is incorrect."
        success_msg: "The 'after' configuration for community '{{ item.name }}' is correct."
      loop: "{{ merged['after']['communities'] }}"
      loop_control:
        label: "Asserting community: {{ item.name }}"

    - name: Assert that 'after' host configurations are correctly generated
      ansible.builtin.assert:
        that:
          - item in result.after.hosts
        fail_msg: "The 'after' configuration for host entry '{{ item }}' is missing or incorrect."
        success_msg: "The 'after' host entry '{{ item }}' is correct."
      loop: "{{ merged['after']['hosts'] }}"
      loop_control:
        label: "Asserting host entry: {{ item }}"

    - name: Assert that 'after' user authentication configurations are correctly generated
      ansible.builtin.assert:
        that:
          - (result.after.users.auth | selectattr('user', 'equalto', item.user) | list | first) == item
        fail_msg: "The 'after' configuration for user '{{ item.user }}' auth is incorrect."
        success_msg: "The 'after' configuration for user '{{ item.user }}' auth is correct."
      loop: "{{ merged['after']['users']['auth'] }}"
      loop_control:
        label: "Asserting user auth: {{ item.user }}"

    - name: Assert that 'after' user ACL configurations are correctly generated
      ansible.builtin.assert:
        that:
          - (result.after.users.use_acls | selectattr('user', 'equalto', item.user) | list | first) == item
        fail_msg: "The 'after' configuration for user '{{ item.user }}' ACLs is incorrect."
        success_msg: "The 'after' configuration for user '{{ item.user }}' ACLs is correct."
      loop: "{{ merged['after']['users']['use_acls'] }}"
      loop_control:
        label: "Asserting user ACLs: {{ item.user }}"

    - name: Merge the provided configuration with the existing running configuration (idempotent)
      cisco.nxos.nxos_snmp_server: *id001
      register: result

    - name: Assert that the previous task was idempotent
      ansible.builtin.assert:
        that:
          - result['changed'] == false
          - result.commands|length == 0
  always:
    - ansible.builtin.include_tasks: _remove_config.yaml
