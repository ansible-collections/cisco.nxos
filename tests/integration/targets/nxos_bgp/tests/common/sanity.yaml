---
- ansible.builtin.debug:
    msg: START connection={{ ansible_connection }} nxos_bgp sanity test

- name: Set a fact for 'neighbor_down_fib_accelerate'
  ansible.builtin.set_fact:
    neighbor_down_fib_accelerate: true
  when: (not titanium) and ((imagetag != 'N1') and (imagetag != 'D1'))

- name: Set a fact for 'reconnect_interval'
  ansible.builtin.set_fact:
    reconnect_interval: "55"
  when: (not titanium) and ((imagetag != 'N1') and (imagetag != 'D1'))

- name: Set a fact for 'isolate'
  ansible.builtin.set_fact:
    isolate: false
  when: platform is not match("N35")

- name: Enable 'feature bgp'
  ignore_errors: true
  cisco.nxos.nxos_feature:
    feature: bgp
    state: enabled

- name: Setup
  ignore_errors: true
  register: result
  cisco.nxos.nxos_bgp: &id002
    asn: 65535
    state: absent

- block:
    - name: Configure BGP defaults
      register: result
      cisco.nxos.nxos_bgp: &id001
        asn: 65535
        router_id: 192.0.2.1
        state: present

    - ansible.builtin.assert: &id003
        that:
          - result.changed == true

    - name: Check idempotence
      register: result
      cisco.nxos.nxos_bgp: *id001

    - ansible.builtin.assert: &id004
        that:
          - result.changed == false

    - name: Remove BGP
      register: result
      cisco.nxos.nxos_bgp: *id002

    - ansible.builtin.assert: *id003

    - name: Check idempotence
      register: result
      cisco.nxos.nxos_bgp: *id002

    - ansible.builtin.assert: *id004

    - name: Configure BGP non defaults
      register: result
      cisco.nxos.nxos_bgp: &id005
        asn: 65535
        router_id: 192.0.2.1
        bestpath_always_compare_med: true
        bestpath_aspath_multipath_relax: true
        bestpath_compare_routerid: true
        bestpath_cost_community_ignore: true
        bestpath_med_confed: true
        bestpath_med_missing_as_worst: true
        bestpath_med_non_deterministic: true
        cluster_id: 10.0.0.1
        confederation_id: 99
        disable_policy_batching: true
        enforce_first_as: false
        fast_external_fallover: false
        flush_routes: true
        graceful_restart_helper: true
        graceful_restart_timers_restart: 130
        graceful_restart_timers_stalepath_time: 310
        isolate: "{{isolate|default(omit)}}"
        log_neighbor_changes: true
        maxas_limit: 50
        neighbor_down_fib_accelerate: "{{neighbor_down_fib_accelerate|default(omit)}}"
        reconnect_interval: "{{reconnect_interval|default(omit)}}"
        shutdown: true
        timer_bestpath_limit: 255
        timer_bgp_hold: 110
        timer_bgp_keepalive: 45
        event_history_cli: size_medium
        event_history_detail: size_large
        event_history_events: size_medium
        event_history_periodic: size_small
        suppress_fib_pending: true
        state: present

    - ansible.builtin.assert: *id003

    - name: Check idempotence
      register: result
      cisco.nxos.nxos_bgp: *id005

    - ansible.builtin.assert: *id004

    - name: Remove BGP
      register: result
      cisco.nxos.nxos_bgp: *id002

    - ansible.builtin.assert: *id003

    - name: Check idempotence
      register: result
      cisco.nxos.nxos_bgp: *id002

    - ansible.builtin.assert: *id004

    - name: Disable 'feature bgp'
      cisco.nxos.nxos_feature:
        feature: bgp
        state: disabled
  rescue:
    - name: Cleanup BGP
      ignore_errors: true
      cisco.nxos.nxos_bgp: *id002

    - name: Disable 'feature bgp'
      ignore_errors: true
      cisco.nxos.nxos_feature:
        feature: bgp
        state: disabled
  always:
    - ansible.builtin.debug:
        msg: END connection={{ ansible_connection }} nxos_bgp sanity test
