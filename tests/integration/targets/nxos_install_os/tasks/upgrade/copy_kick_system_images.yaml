---
- name: Set a fact for 'ignore_errors_httpapi'
  ansible.builtin.set_fact:
    ignore_errors_httpapi: false

- name: Set a fact for 'ignore_errors_httpapi'
  ansible.builtin.set_fact:
    ignore_errors_httpapi: true
  when: ansible_connection == 'ansible.netcommon.httpapi'

- name: Enable SCP server
  ansible.builtin.include_tasks: enable_scp_server.yaml

- name: Remove SSH known_hosts file before scp of image file
  ignore_errors: true # noqa ignore-errors
  cisco.nxos.nxos_command:
    commands: run bash rm /var/home/admin/.ssh/known_hosts

- name: Copy file to bootflash {{ si }}
  register: result
  cisco.nxos.nxos_file_copy:
    file_pull: true
    file_pull_timeout: 1200
    remote_file: "{{ image_dir }}{{ si }}"
    remote_scp_server: "{{ remote_scp_server }}"
    remote_scp_server_user: "{{ remote_scp_user }}"
    remote_scp_server_password: "{{ remote_scp_password }}"

- name: Debug output the result from the image copy
  ansible.builtin.debug:
    msg: "{{ item.key }} {{ item.value }}"
  with_dict: "{{ result }}"

- name: Copy file to bootflash {{ ki }}
  when: ki is defined
  register: result
  cisco.nxos.nxos_file_copy:
    file_pull: true
    file_pull_timeout: 1200
    remote_file: "{{ image_dir }}{{ ki }}"
    remote_scp_server: "{{ remote_scp_server }}"
    remote_scp_server_user: "{{ remote_scp_user }}"
    remote_scp_server_password: "{{ remote_scp_password }}"

- name: Debug out the result from the image copy
  ansible.builtin.debug:
    msg: "{{ item.key }} {{ item.value }}"
  with_dict: "{{ result }}"
  when: ki is defined
