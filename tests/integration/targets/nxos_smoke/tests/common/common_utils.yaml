---
# nxos_command -> ComplexList
# nxos_config -> to_list
# nxos_interface -> conditional, remove_default_spec

- ansible.builtin.debug:
    msg: START connection={{ ansible_connection }} common/common_utils.yaml
- ansible.builtin.debug:
    msg: Using provider={{ connection.transport }}
  when: ansible_connection == "local"

# hit ComplexList
- name: Test contains operator
  cisco.nxos.nxos_command:
    commands:
      - show version
    provider: "{{ connection }}"

# hit to_list()
- name: Setup
  cisco.nxos.nxos_config:
    lines: hostname switch
    provider: "{{ connection }}"
    match: none

- name: Configure top level command
  cisco.nxos.nxos_config:
    lines: hostname foo
    provider: "{{ connection }}"
  register: result

- ansible.builtin.assert:
    that:
      - "result.changed == true"
      - "'hostname foo' in result.updates"

- name: Setup
  cisco.nxos.nxos_config:
    lines: hostname switch
    provider: "{{ connection }}"
    match: none

# hit conditional()
- name: Set a fact for 'testint1'
  ansible.builtin.set_fact:
    testint1: "{{ nxos_int1 }}"
- name: Set a fact for 'testint2'
  ansible.builtin.set_fact:
    testint2: "{{ nxos_int2 }}"

- name: "Setup: put interfaces into a default state"
  cisco.nxos.nxos_config:
    lines:
      - "default interface {{ testint1 }}"
      - "default interface {{ testint2 }}"
    provider: "{{ connection }}"
  ignore_errors: true

  register: result

- name: Check intent arguments
  cisco.nxos.nxos_interface:
    name: "{{ testint2 }}"
    admin_state: up
    tx_rate: ge(0)
    rx_rate: ge(0)
    provider: "{{ connection }}"
  register: result

- ansible.builtin.assert:
    that:
      - "result.failed == false"

- name: Check intent arguments (failed condition)
  cisco.nxos.nxos_interface:
    name: "{{ testint2 }}"
    admin_state: down
    tx_rate: lt(0)
    rx_rate: lt(0)
    provider: "{{ connection }}"
  ignore_errors: true
  register: result

- ansible.builtin.assert:
    that:
      - "result.failed == true"
      - "'tx_rate lt(0)' in result.failed_conditions"
      - "'rx_rate lt(0)' in result.failed_conditions"

- name: Aggregate definition of interface
  cisco.nxos.nxos_interface:
    aggregate:
      - name: "{{ testint1 }}"
        description: "Test aggregation on first interface"
      - name: "{{ testint2 }}"
        mode: layer3
    provider: "{{ connection }}"
  register: result

- ansible.builtin.assert:
    that:
      - "result.changed == true"

- name: "Teardown: put interfaces into a default state"
  cisco.nxos.nxos_config:
    lines:
      - "default interface {{ testint1 }}"
      - "default interface {{ testint2 }}"
    provider: "{{ connection }}"
  ignore_errors: true
