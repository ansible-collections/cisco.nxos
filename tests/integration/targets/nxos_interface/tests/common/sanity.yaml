---
- ansible.builtin.debug:
    msg: START connection={{ ansible_connection }} nxos_interface sanity test

- name: Set a fact for 'testint'
  ansible.builtin.set_fact:
    testint: "{{ nxos_int1 }}"

- name: "Setup: enable 'feature interface-vlan'"
  ignore_errors: true
  cisco.nxos.nxos_feature:
    feature: interface-vlan
    state: enabled

- name: "Setup: put interface {{ testint }} into a default state"
  ignore_errors: true
  cisco.nxos.nxos_config: &id008
    lines:
      - default interface {{ testint }}

- name: "Setup: remove possibly existing VLAN interfaces"
  ignore_errors: true
  cisco.nxos.nxos_config: &id009
    lines:
      - no interface vlan 2
      - no interface vlan 710
      - no interface vlan 711
      - no interface vlan 712

- block:
    - name: Configure layer3 params
      register: result
      cisco.nxos.nxos_interface: &id001
        interface: "{{ testint }}"
        mode: layer3
        description: Configured by Ansible - Layer3
        admin_state: up
        state: present

    - ansible.builtin.assert: &id002
        that:
          - result.changed == true

    - name: Check idempotence
      register: result
      cisco.nxos.nxos_interface: *id001

    - ansible.builtin.assert: &id004
        that:
          - result.changed == false

    - name: Configure layer2 params
      register: result
      cisco.nxos.nxos_interface: &id003
        interface: "{{ testint }}"
        mode: layer2
        description: Configured by Ansible - Layer2
        admin_state: down
        state: present

    - ansible.builtin.assert: *id002

    - name: Check idempotence
      register: result
      cisco.nxos.nxos_interface: *id003

    - ansible.builtin.assert: *id004

    - name: Create VLAN interfaces
      with_items: &id005
        - os_svi_int: vlan2
          os_svi_desc: SVI_VLAN2

        - os_svi_int: vlan710
          os_svi_desc: SVI_VLAN710

        - os_svi_int: vlan711
          os_svi_desc: SVI_VLAN711

        - os_svi_int: vlan712
          os_svi_desc: SVI_VLAN712
      register: result
      cisco.nxos.nxos_interface: &id006
        interface: "{{ item.os_svi_int }}"
        description: "{{ item.os_svi_desc }}"

    - ansible.builtin.assert: *id002

    - name: Configure required SVI
      register: result
      cisco.nxos.nxos_l3_interface: &id007
        aggregate:
          - name: vlan2
            ipv4: 192.168.2.1/24

          - name: vlan710
            ipv4: 192.168.3.1/24

          - name: vlan711
            ipv4: 192.168.4.1/24

          - name: vlan712
            ipv4: 192.168.5.1/24

    - ansible.builtin.assert: *id002

    - name: Create VLAN interfaces idempotence check
      with_items: *id005
      register: result
      cisco.nxos.nxos_interface: *id006

    - ansible.builtin.assert: *id004

    - name: Configure required SVI idempotence check
      register: result
      cisco.nxos.nxos_l3_interface: *id007

    - ansible.builtin.assert: *id004
  always:
    - name: Set interface back to default
      ignore_errors: true
      cisco.nxos.nxos_config: *id008

    - name: Remove VLAN interfaces
      cisco.nxos.nxos_config: *id009

    - name: "Setup: disable 'feature interface-vlan'"
      ignore_errors: true
      cisco.nxos.nxos_feature:
        feature: interface-vlan
        state: disabled

    - ansible.builtin.debug:
        msg: END connection={{ ansible_connection }} nxos_interface sanity test
