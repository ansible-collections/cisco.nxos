---
- ansible.builtin.debug:
    msg: START connection={{ ansible_connection }} nxos_vpc sanity test

- block:
    - name: Set a fact for 'delay_restore_orphan_port'
      ansible.builtin.set_fact:
        delay_restore_orphan_port: 25

    - name: Set a fact for 'def_delay_restore_orphan_port'
      ansible.builtin.set_fact:
        def_delay_restore_orphan_port: default
  when: platform is not search("N35|N5K|N6K")

- block:
    - name: Disable vpc for initial vpc configuration cleanup
      cisco.nxos.nxos_feature:
        feature: vpc
        state: disabled

    - name: Enable 'feature vpc'
      cisco.nxos.nxos_feature:
        feature: vpc
        state: enabled

    - name: Ensure NTC VRF exists on switch
      cisco.nxos.nxos_vrf:
        vrf: ntc

    - name: Configure vpc
      register: result
      cisco.nxos.nxos_vpc: &id001
        state: present
        domain: 100
        pkl_dest: 192.168.100.4
        pkl_src: 10.1.100.20
        pkl_vrf: ntc

    - ansible.builtin.assert: &id002
        that:
          - result.changed == true

    - name: Configure idempotence
      register: result
      cisco.nxos.nxos_vpc: *id001

    - ansible.builtin.assert: &id004
        that:
          - result.changed == false

    - name: Configure vpc1
      register: result
      cisco.nxos.nxos_vpc: &id003
        state: present
        domain: 100
        role_priority: 500
        system_priority: 2000
        peer_gw: true
        delay_restore: 5
        delay_restore_interface_vlan: 15
        delay_restore_orphan_port: "{{ delay_restore_orphan_port|default(omit) }}"

    - ansible.builtin.assert: *id002

    - name: Configure idempotence
      register: result
      cisco.nxos.nxos_vpc: *id003

    - ansible.builtin.assert: *id004

    - block:
        - set_fact: def_auto_recovery=False

        - set_fact: def_auto_recovery=True
          when: platform is search("N7K")

        - name: auto-recovery from default to non-default
          register: result
          cisco.nxos.nxos_vpc: &id005
            domain: 100
            auto_recovery: "{{ not def_auto_recovery }}"

        - assert: *id002

        - name: Conf Idempotence auto-recovery def-to-non-def
          register: result
          cisco.nxos.nxos_vpc: *id005

        - assert: *id004

        - name: auto-recovery from non-default to default
          register: result
          cisco.nxos.nxos_vpc: &id006
            domain: 100
            auto_recovery: "{{ def_auto_recovery }}"

        - assert: *id002

        - name: Conf Idempotence auto-recovery non-def-to-def
          register: result
          cisco.nxos.nxos_vpc: *id006

        - assert: *id004
      when: platform is search("N35|N7K|N3K-F|N9K-F")

    - name: Configure auto-recovery reload-delay
      register: result
      cisco.nxos.nxos_vpc: &id007
        domain: 100
        auto_recovery_reload_delay: 242

    - ansible.builtin.assert: *id002

    - name: Configure idempotence auto-recovery reload-delay
      register: result
      cisco.nxos.nxos_vpc: *id007

    - ansible.builtin.assert: *id004

    - name: Configure vpc2
      register: result
      cisco.nxos.nxos_vpc: &id008
        state: present
        domain: 100
        role_priority: default
        system_priority: default
        peer_gw: true
        delay_restore: default
        delay_restore_interface_vlan: default
        delay_restore_orphan_port: "{{ def_delay_restore_orphan_port|default(omit) }}"

    - ansible.builtin.assert: *id002

    - name: Configure idempotence
      register: result
      cisco.nxos.nxos_vpc: *id008

    - ansible.builtin.assert: *id004

    - name: Configure vpc3
      register: result
      cisco.nxos.nxos_vpc: &id009
        state: present
        domain: 100
        peer_gw: false

    - ansible.builtin.assert: *id002

    - name: Configure idempotence
      register: result
      cisco.nxos.nxos_vpc: *id009

    - ansible.builtin.assert: *id004

    - name: Remove vpc
      register: result
      cisco.nxos.nxos_vpc: &id010
        state: absent
        domain: 100

    - ansible.builtin.assert: *id002

    - name: Remove idempotence
      register: result
      cisco.nxos.nxos_vpc: *id010

    - ansible.builtin.assert: *id004
  always:
    - name: Remove VRF
      ignore_errors: true
      cisco.nxos.nxos_vrf:
        vrf: ntc
        state: absent

    - name: Disable 'feature vpc'
      ignore_errors: true
      cisco.nxos.nxos_feature:
        feature: vpc
        state: disabled

- ansible.builtin.debug:
    msg: END connection={{ ansible_connection }} nxos_vpc sanity test
