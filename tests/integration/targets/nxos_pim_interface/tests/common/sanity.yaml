---
- ansible.builtin.debug:
    msg: START connection={{ ansible_connection }} nxos_pim_interface sanity test

- name: "Setup: disable features"
  loop:
    - pim
    - bfd
  ignore_errors: true
  cisco.nxos.nxos_feature: &id011
    feature: "{{ item }}"
    state: disabled

- name: "Setup: enable features"
  loop:
    - pim
    - bfd
  cisco.nxos.nxos_feature:
    feature: "{{ item }}"
    state: enabled

- name: Set a fact for 'testint'
  ansible.builtin.set_fact:
    testint: "{{ nxos_int1 }}"

- name: "Setup: put interface {{ testint }} into a default state"
  ignore_errors: true
  cisco.nxos.nxos_config:
    lines:
      - default interface {{ testint }}

- name: Ensure {{testint}} is layer3
  cisco.nxos.nxos_interfaces:
    config:
      - name: "{{ testint }}"
        mode: layer3
        description: Configured by Ansible - Layer3
        enabled: true
    state: merged

- block:
    - name: Configure nxos_pim_interface state absent
      cisco.nxos.nxos_pim_interface: &id010
        interface: "{{ testint }}"
        state: absent

    - name: Configure jp policy and type
      register: result
      cisco.nxos.nxos_pim_interface: &id001
        interface: "{{ testint }}"
        jp_policy_in: JPIN
        jp_policy_out: JPOUT
        jp_type_in: routemap
        jp_type_out: routemap
        sparse: true
        border: true

    - ansible.builtin.assert: &id002
        that:
          - result.changed == true

    - name: Check idempotence
      register: result
      cisco.nxos.nxos_pim_interface: *id001

    - ansible.builtin.assert: &id004
        that:
          - result.changed == false

    - name: Configure neighbor policy and rm
      register: result
      cisco.nxos.nxos_pim_interface: &id003
        interface: "{{ testint }}"
        neighbor_policy: NPR
        neighbor_type: routemap

    - ansible.builtin.assert: *id002

    - name: Check idempotence
      register: result
      cisco.nxos.nxos_pim_interface: *id003

    - ansible.builtin.assert: *id004

    - ansible.builtin.pause:
        seconds: 5

    - name: Configure neighbor policy and prefix
      register: result
      cisco.nxos.nxos_pim_interface: &id005
        interface: "{{ testint }}"
        neighbor_policy: NPPF
        neighbor_type: prefix

    - ansible.builtin.assert: *id002

    - name: Check idempotence
      register: result
      cisco.nxos.nxos_pim_interface: *id005

    - ansible.builtin.assert: *id004

    - name: Configure hello_auth_key
      register: result
      cisco.nxos.nxos_pim_interface:
        interface: "{{ testint }}"
        hello_auth_key: password1

    - ansible.builtin.assert: *id002

    - name: Configure PIM other params
      register: result
      cisco.nxos.nxos_pim_interface: &id006
        interface: "{{ testint }}"
        dr_prio: 10
        hello_interval: 40
        sparse: true
        border: true
        bfd: enable
        state: present

    - ansible.builtin.assert: *id002

    - name: Check idempotence
      register: result
      cisco.nxos.nxos_pim_interface: *id006

    - ansible.builtin.assert: *id004

    - name: Configure negative
      register: result
      cisco.nxos.nxos_pim_interface: &id007
        interface: "{{ testint }}"
        sparse: false
        border: false
        bfd: disable
        state: present

    - ansible.builtin.assert: *id002

    - name: Check idempotence
      register: result
      cisco.nxos.nxos_pim_interface: *id007

    - ansible.builtin.assert: *id004

    - ansible.builtin.pause:
        seconds: 5

    - name: Configure state default
      register: result
      cisco.nxos.nxos_pim_interface: &id008
        interface: "{{ testint }}"
        state: default

    - ansible.builtin.assert: *id002

    - name: Check idempotence
      register: result
      cisco.nxos.nxos_pim_interface: *id008

    - ansible.builtin.assert: *id004

    - name: Configure border
      register: result
      cisco.nxos.nxos_pim_interface: &id009
        interface: "{{ testint }}"
        border: true
        state: present

    - ansible.builtin.assert: *id002

    - name: Check idempotence
      register: result
      cisco.nxos.nxos_pim_interface: *id009

    - ansible.builtin.assert: *id004

    - name: Configure state absent
      register: result
      cisco.nxos.nxos_pim_interface: *id010

    - ansible.builtin.assert: *id002

    - name: Check idempotence
      register: result
      cisco.nxos.nxos_pim_interface: *id010

    - ansible.builtin.assert: *id004
  always:
    - name: Disable 'feature pim'
      loop:
        - pim
        - bfd
      cisco.nxos.nxos_feature: *id011

- ansible.builtin.debug:
    msg: END connection={{ ansible_connection }} nxos_pim_interface sanity test
