---
- ansible.builtin.debug:
    msg: START connection={{ ansible_connection }} nxos_evpn_global sanity test

- name: Setup
  ignore_errors: true
  cisco.nxos.nxos_config: &id005
    lines: no nv overlay evpn
    match: none

- name: Disable feature nv overlay
  ignore_errors: true
  cisco.nxos.nxos_feature: &id006
    feature: nv overlay
    state: disabled

- block:
    - name: Enable feature nv overlay
      ignore_errors: true
      cisco.nxos.nxos_feature:
        feature: nv overlay
        state: enabled

    - name: Enable nv overlay evpn
      register: result
      cisco.nxos.nxos_evpn_global: &id001
        nv_overlay_evpn: true

    - ansible.builtin.assert: &id002
        that:
          - result.changed == true

    - name: CHECK IDEMPOTENCE - enable nv overlay evpn
      register: result
      cisco.nxos.nxos_evpn_global: *id001

    - ansible.builtin.assert: &id004
        that:
          - result.changed == false

    - name: Disable nv overlay evpn
      register: result
      cisco.nxos.nxos_evpn_global: &id003
        nv_overlay_evpn: false

    - ansible.builtin.assert: *id002

    - name: CHECK DEMPOTENCE - Disable nv overlay evpn
      register: result
      cisco.nxos.nxos_evpn_global: *id003

    - ansible.builtin.assert: *id004
  when: not ( platform is search('N3K|N35|N3L'))
  rescue:
    - ansible.builtin.debug:
        msg: connection={{ ansible_connection }} nxos_evpn_global sanity test - FALURE ENCOUNTERED
  always:
    - name: Cleanup - Disable nv overlay evpn
      ignore_errors: true
      cisco.nxos.nxos_config: *id005

    - name: Cleanup - Disable feature nv overlay
      ignore_errors: true
      cisco.nxos.nxos_feature: *id006

    - ansible.builtin.debug:
        msg: END connection={{ ansible_connection }} nxos_evpn_global sanity test
