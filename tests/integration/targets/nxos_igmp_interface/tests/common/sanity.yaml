---
- ansible.builtin.debug:
    msg: START connection={{ ansible_connection }} nxos_igmp_interface sanity test

- name: Set a fact for 'intname'
  ansible.builtin.set_fact:
    intname: "{{ nxos_int1 }}"

- name: Set a fact for 'restart'
  ansible.builtin.set_fact:
    restart: true
  when: platform is not match("N35")

- name: Enable 'feature pim'
  ignore_errors: true
  cisco.nxos.nxos_feature:
    feature: pim
    state: enabled

- name: Put interface in default mode
  ignore_errors: true
  cisco.nxos.nxos_config:
    commands:
      - default interface {{ intname }}
    match: none

- block:
    - name: Put interface in layer 3 and enable PIM
      cisco.nxos.nxos_config:
        commands:
          - no switchport
          - ip pim sparse-mode
        parents:
          - interface {{ intname }}
        match: none

    - name: Configure IGMP interface with non-default values
      register: result
      cisco.nxos.nxos_igmp_interface: &id001
        interface: "{{ intname }}"
        version: 3
        startup_query_interval: 60
        startup_query_count: 5
        robustness: 6
        querier_timeout: 2000
        query_mrt: 12
        query_interval: 200
        last_member_qrt: 2
        last_member_query_count: 4
        report_llg: true
        immediate_leave: true
        group_timeout: 300
        oif_ps:
          - source: 192.0.2.1
            prefix: 239.255.255.2
        state: present

    - ansible.builtin.assert: &id002
        that:
          - result.changed == true

    - name: Check idempotence - configure IGMP interface with non-default values
      register: result
      cisco.nxos.nxos_igmp_interface: *id001

    - ansible.builtin.assert: &id004
        that:
          - result.changed == false

    - name: Configure IGMP interface with some default values
      register: result
      cisco.nxos.nxos_igmp_interface: &id003
        interface: "{{ intname }}"
        version: default
        startup_query_interval: default
        startup_query_count: default
        robustness: default
        querier_timeout: default
        query_mrt: default
        query_interval: default
        last_member_qrt: default
        last_member_query_count: default
        group_timeout: default
        oif_ps:
          - prefix: 238.2.2.6

          - prefix: 238.2.2.5

          - source: 192.0.2.1
            prefix: 238.2.2.5
        state: present

    - ansible.builtin.assert: *id002

    - name: Check idempotence - configure IGMP interface with some default values
      register: result
      cisco.nxos.nxos_igmp_interface: *id003

    - ansible.builtin.assert: *id004

    - name: Restart IGMP
      cisco.nxos.nxos_igmp_interface:
        interface: "{{ intname }}"
        restart: "{{restart|default(omit)}}"

    - name: Configure IGMP interface with default oif_ps
      register: result
      cisco.nxos.nxos_igmp_interface: &id005
        interface: "{{ intname }}"
        oif_ps: default
        state: present

    - ansible.builtin.assert: *id002

    - name: Check idempotence - configure IGMP interface with default oif_ps
      register: result
      cisco.nxos.nxos_igmp_interface: *id005

    - ansible.builtin.assert: *id004

    - name: Configure IGMP interface with oif_routemap
      register: result
      cisco.nxos.nxos_igmp_interface: &id006
        interface: "{{ intname }}"
        version: 3
        startup_query_interval: 60
        startup_query_count: 5
        robustness: 6
        oif_routemap: abcd
        state: present

    - ansible.builtin.assert: *id002

    - name: Check idempotence - configure IGMP interface with oif_routemap
      register: result
      cisco.nxos.nxos_igmp_interface: *id006

    - ansible.builtin.assert: *id004

    - name: Configure IGMP interface with default state
      register: result
      cisco.nxos.nxos_igmp_interface: &id007
        interface: "{{ intname }}"
        state: default

    - ansible.builtin.assert: *id002

    - name: Check idempotence - configure IGMP interface with default state
      register: result
      cisco.nxos.nxos_igmp_interface: *id007

    - ansible.builtin.assert: *id004

    - name: Configure IGMP interface with absent state
      register: result
      cisco.nxos.nxos_igmp_interface: &id008
        interface: "{{ intname }}"
        state: absent

    - ansible.builtin.assert: *id002

    - name: Check idempotence - configure IGMP interface with absent state
      register: result
      cisco.nxos.nxos_igmp_interface: *id008

    - ansible.builtin.assert: *id004
  always:
    - name: Configure IGMP interface with absent state
      register: result
      cisco.nxos.nxos_igmp_interface: *id008

    - name: Put interface in default mode
      cisco.nxos.nxos_config:
        commands:
          - default interface {{ intname }}
        match: none

    - name: Disable 'feature pim'
      ignore_errors: true
      cisco.nxos.nxos_feature:
        feature: pim
        state: disabled

    - ansible.builtin.debug:
        msg: END connection={{ ansible_connection }} nxos_igmp_interface sanity test
