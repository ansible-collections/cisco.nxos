---
- ansible.builtin.debug:
    msg: START connection={{ ansible_connection }} nxos_acl_interface sanity test

- name: Set a fact for 'intname'
  ansible.builtin.set_fact:
    intname: "{{ nxos_int1 }}"

- name: Interface selected for this test
  ansible.builtin.debug:
    msg: "{{ intname }}"

- name: "Setup: put interface into a default state"
  ignore_errors: true
  cisco.nxos.nxos_config: &id007
    lines:
      - default interface {{ intname }}

- name: "Setup: put interface into no switch port mode"
  ignore_errors: true
  cisco.nxos.nxos_config:
    commands:
      - no switchport
    parents:
      - interface {{ intname }}
    match: none

- name: "Setup: cleanup possibly existing ACL"
  ignore_errors: true
  cisco.nxos.nxos_acl: &id008
    name: ANSIBLE_ACL
    seq: 10
    state: delete_acl

- name: Configure supporting ACL
  cisco.nxos.nxos_acl:
    name: ANSIBLE_ACL
    seq: 10
    action: permit
    proto: tcp
    src: 192.0.2.1/24
    dest: any

- block:
    - name: Configure ACL interface egress
      register: result
      cisco.nxos.nxos_acl_interface: &id001
        name: ANSIBLE_ACL
        interface: "{{ intname }}"
        direction: egress
        state: present

    - ansible.builtin.assert: &id002
        that:
          - result.changed == true

    - name: Check idempotence egress
      register: result
      cisco.nxos.nxos_acl_interface: *id001

    - ansible.builtin.assert: &id004
        that:
          - result.changed == false

    - name: Configure ACL interface ingress
      register: result
      cisco.nxos.nxos_acl_interface: &id003
        name: ANSIBLE_ACL
        interface: "{{ intname }}"
        direction: ingress
        state: present

    - ansible.builtin.assert: *id002

    - name: Check idempotence ingress
      register: result
      cisco.nxos.nxos_acl_interface: *id003

    - ansible.builtin.assert: *id004

    - name: Cleanup ACL interface egress
      register: result
      cisco.nxos.nxos_acl_interface: &id005
        name: ANSIBLE_ACL
        interface: "{{ intname }}"
        direction: egress
        state: absent

    - ansible.builtin.assert: *id002

    - name: Check idempotence egress cleanup
      register: result
      cisco.nxos.nxos_acl_interface: *id005

    - ansible.builtin.assert: *id004

    - name: Cleanup ACL interface ingress
      register: result
      cisco.nxos.nxos_acl_interface: &id006
        name: ANSIBLE_ACL
        interface: "{{ intname }}"
        direction: ingress
        state: absent

    - ansible.builtin.assert: *id002

    - name: Check idempotence ingress cleanup
      register: result
      cisco.nxos.nxos_acl_interface: *id006

    - ansible.builtin.assert: *id004
  rescue:
    - name: Put test interface into default state.
      ignore_errors: true
      cisco.nxos.nxos_config: *id007
  always:
    - name: Remove possible configured ACL
      ignore_errors: true
      cisco.nxos.nxos_acl: *id008

    - ansible.builtin.debug:
        msg: END connection={{ ansible_connection }} nxos_acl_interface sanity test
