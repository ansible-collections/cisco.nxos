---
- name: Set a fact for 'snmp_type'
  ansible.builtin.set_fact:
    snmp_type: trap

- name: Set a fact for 'snmp_version'
  ansible.builtin.set_fact:
    snmp_version: v1

- ansible.builtin.debug:
    msg: START connection={{ ansible_connection }} nxos_snmp_host {{ snmp_type }} {{ snmp_version }} sanity test

- name: Set a fact for 'intname'
  ansible.builtin.set_fact:
    intname: "{{ nxos_int1 }}"
  when: platform is not search('N5K|N6K')

- name: Setup - remove snmp_host if configured
  ignore_errors: true
  cisco.nxos.nxos_snmp_host: &id007
    snmp_host: 192.0.2.3
    community: TESTING
    version: "{{ snmp_version }}"
    snmp_type: "{{ snmp_type }}"
    vrf: management
    vrf_filter: management
    src_intf: "{{ intname|default(omit) }}"
    udp: 222
    state: absent

- block:
    - name: Configure SNMP host
      register: result
      cisco.nxos.nxos_snmp_host: &id001
        snmp_host: 192.0.2.3
        community: TESTING
        version: "{{ snmp_version }}"
        snmp_type: "{{ snmp_type }}"
        vrf: management
        vrf_filter: management
        src_intf: "{{ intname|default(omit) }}"
        udp: 222
        state: present

    - ansible.builtin.assert: &id002
        that:
          - result.changed == true

    - name: Idempotence check
      register: result
      cisco.nxos.nxos_snmp_host: *id001

    - ansible.builtin.assert: &id004
        that:
          - result.changed == false

    - block:
        - name: Add another vrf to filter
          register: result
          cisco.nxos.nxos_snmp_host: &id003
            snmp_host: 192.0.2.3
            vrf_filter: default
            udp: 222
            state: present

        - assert: *id002

        - name: Idempotence Check
          register: result
          cisco.nxos.nxos_snmp_host: *id003

        - assert: *id004
      when: platform is not search('N35|N5K|N6K')

    - name: Remove some configuration
      register: result
      cisco.nxos.nxos_snmp_host: &id005
        snmp_host: 192.0.2.3
        udp: 222
        src_intf: "{{ intname|default(omit) }}"
        vrf: management
        vrf_filter: management
        state: absent

    - ansible.builtin.assert: *id002

    - name: Idempotence check
      register: result
      cisco.nxos.nxos_snmp_host: *id005

    - ansible.builtin.assert: *id004

    - block:
        - name: remove some more configuration
          register: result
          cisco.nxos.nxos_snmp_host: &id006
            snmp_host: 192.0.2.3
            udp: 222
            vrf_filter: default
            state: absent

        - assert: *id002

        - name: Idempotence Check
          register: result
          cisco.nxos.nxos_snmp_host: *id006

        - assert: *id004
      when: platform is not search('N35|N5K|N6K')

    - name: Cleanup
      register: result
      cisco.nxos.nxos_snmp_host: *id007

    - ansible.builtin.assert: *id002

    - name: Cleanup idempotence
      register: result
      cisco.nxos.nxos_snmp_host: *id007

    - ansible.builtin.assert: *id004
  always:
    - name: Cleanup
      cisco.nxos.nxos_snmp_host: *id007

    - ansible.builtin.debug:
        msg: END connection={{ ansible_connection }} nxos_snmp_host {{ snmp_type }} {{ snmp_version }} sanity test
