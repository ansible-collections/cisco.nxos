---
- ansible.builtin.debug:
    msg: START connection={{ ansible_connection }} nxos_igmp sanity test

- name: Set a fact for 'restart'
  ansible.builtin.set_fact:
    restart: true
  when: platform is not match("N35")

- block:
    - name: Configure igmp with non-default values
      register: result
      cisco.nxos.nxos_igmp: &id001
        flush_routes: true
        enforce_rtr_alert: true
        restart: false
        state: present

    - ansible.builtin.assert: &id002
        that:
          - result.changed == true

    - name: Check idempotence - configure igmp interface with non-default values
      register: result
      cisco.nxos.nxos_igmp: *id001

    - ansible.builtin.assert: &id004
        that:
          - result.changed == false

    - name: Configure igmp defaults
      register: result
      cisco.nxos.nxos_igmp: &id003
        flush_routes: false
        enforce_rtr_alert: false
        restart: "{{restart|default(omit)}}"
        state: present

    - ansible.builtin.assert: *id002

    - name: Check idempotence - configure igmp with defaults
      register: result
      cisco.nxos.nxos_igmp: *id003

    - ansible.builtin.assert: *id004

    - name: Configure igmp non-defaults again
      register: result
      cisco.nxos.nxos_igmp: *id001

    - name: Configure igmp state as values
      register: result
      cisco.nxos.nxos_igmp: &id005
        state: default

    - ansible.builtin.assert: *id002

    - name: Check idempotence - configure igmp with state default
      register: result
      cisco.nxos.nxos_igmp: *id005

    - ansible.builtin.assert: *id004
  always:
    - name: Configure igmp with default values
      register: result
      ignore_errors: true
      cisco.nxos.nxos_igmp: *id005

    - ansible.builtin.debug:
        msg: END connection={{ ansible_connection }} nxos_igmp sanity test
