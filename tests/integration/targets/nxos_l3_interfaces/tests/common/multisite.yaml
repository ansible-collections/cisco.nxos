---
- ansible.builtin.debug:
    msg: Start nxos_l3_interfaces multisite integration tests connection={{ ansible_connection }}

- name: Set a fact for 'test_int1', 'test_int2', and 'test_int3'
  ansible.builtin.set_fact:
    test_int1: "{{ nxos_int1 }}"
    test_int2: "{{ nxos_int2 }}"
    test_int3: "{{ nxos_int3 }}"

- ansible.builtin.include_tasks: _remove_config.yaml

- name: Enable 'feature nv overlay' - multisite
  cisco.nxos.nxos_config:
    commands:
      - no feature nv overlay
      - feature nv overlay
    match: none

- name: Enable NV overlay EVPN - multisite
  when: platform is search('N9K')
  ignore_errors: true
  cisco.nxos.nxos_config:
    lines:
      - nv overlay evpn

- name: Enable multisite border gateway - multisite
  ignore_errors: true
  register: multiout
  cisco.nxos.nxos_config:
    lines:
      - evpn multisite border-gateway 10

- block:
    - name: Setup1 - deleted
      ignore_errors: true
      cisco.nxos.nxos_config:
        lines:
          - "no system default switchport"
          - "default interface {{ test_int3 }}"
          - "interface {{ test_int3 }}"
          - "  no switchport"

    - name: Setup3 - deleted
      cisco.nxos.nxos_config:
        lines:
          - "interface {{ test_int3 }}"
          - "  ip address 192.168.10.2/24"
          - "  no ip redirects"
          - "  ip unreachables"
          - "  evpn multisite dci-tracking"

    - name: Gather l3_interfaces facts deleted
      cisco.nxos.nxos_facts:
        gather_subset:
          - "!all"
          - "!min"
        gather_network_resources: l3_interfaces

    - name: Deleted
      register: result
      cisco.nxos.nxos_l3_interfaces: &id001
        config:
          - name: "{{ test_int3 }}"
        state: deleted

    - ansible.builtin.assert:
        that:
          - result.before|symmetric_difference(ansible_facts.network_resources.l3_interfaces) == []
          - result.changed == true
          - "'interface {{ test_int3 }}' in result.commands"
          - "'ip redirects' in result.commands"
          - "'no ip unreachables' in result.commands"
          - "'no ip address' in result.commands"
          - "'no evpn multisite dci-tracking' in result.commands"
          - result.commands|length == 5

    - name: Idempotence - deleted
      register: result
      cisco.nxos.nxos_l3_interfaces: *id001

    - ansible.builtin.assert:
        that:
          - result.changed == false
          - result.commands|length == 0

    - ansible.builtin.include_tasks: _remove_config.yaml

    - name: Setup1 - merged
      ignore_errors: true
      cisco.nxos.nxos_config:
        lines:
          - "no system default switchport"
          - "default interface {{ test_int3 }}"
          - "interface {{ test_int3 }}"
          - "  no switchport"

    - name: Merged
      register: result
      cisco.nxos.nxos_l3_interfaces: &id002
        config:
          - name: "{{ test_int3 }}"
            redirects: false
            unreachables: true
            evpn_multisite_tracking: fabric-tracking
            ipv4:
              - address: 192.168.10.2/24
        state: merged

    - ansible.builtin.assert:
        that:
          - result.changed == true
          - "'interface {{ test_int3 }}' in result.commands"
          - "'no ip redirects' in result.commands"
          - "'ip unreachables' in result.commands"
          - "'ip address 192.168.10.2/24' in result.commands"
          - "'evpn multisite fabric-tracking' in result.commands"
          - result.commands|length == 5

    - name: Gather l3_interfaces facts - merged
      cisco.nxos.nxos_facts:
        gather_subset:
          - "!all"
          - "!min"
        gather_network_resources: l3_interfaces

    - ansible.builtin.assert:
        that:
          - result.after|symmetric_difference(ansible_facts.network_resources.l3_interfaces) == []

    - name: Idempotence - merged
      register: result
      cisco.nxos.nxos_l3_interfaces: *id002

    - ansible.builtin.assert:
        that:
          - result.changed == false
          - result.commands|length == 0

    - ansible.builtin.include_tasks: _remove_config.yaml

    - name: Setup1 - replaced
      ignore_errors: true
      cisco.nxos.nxos_config:
        lines:
          - "no system default switchport"
          - "default interface {{ test_int3 }}"
          - "interface {{ test_int3 }}"
          - "  no switchport"

    - name: Setup3 - replaced
      cisco.nxos.nxos_config:
        lines:
          - "interface {{ test_int3 }}"
          - "  ip address 192.168.10.2/24"
          - "  no ip redirects"
          - "  ip unreachables"
          - "  evpn multisite dci-tracking"

    - name: Gather l3_interfaces facts
      cisco.nxos.nxos_facts: &id003
        gather_subset:
          - "!all"
          - "!min"
        gather_network_resources: l3_interfaces

    - name: Replaced
      register: result
      cisco.nxos.nxos_l3_interfaces: &id004
        config:
          - name: "{{ test_int3 }}"
            redirects: false
            unreachables: false
            evpn_multisite_tracking: fabric-tracking
            ipv4:
              - address: 192.168.20.2/24
                tag: 5

              - address: 192.168.200.2/24
                secondary: true
        state: replaced

    - ansible.builtin.assert:
        that:
          - result.before|symmetric_difference(ansible_facts.network_resources.l3_interfaces) == []
          - result.changed == true
          - "'interface {{ test_int3 }}' in result.commands"
          - "'no ip unreachables' in result.commands"
          - "'ip address 192.168.20.2/24 tag 5' in result.commands"
          - "'ip address 192.168.200.2/24 secondary' in result.commands"
          - "'evpn multisite fabric-tracking' in result.commands"
          - result.commands|length == 5

    - name: Gather l3_interfaces post facts
      cisco.nxos.nxos_facts: *id003

    - ansible.builtin.assert:
        that:
          - result.after|symmetric_difference(ansible_facts.network_resources.l3_interfaces) == []

    - name: Idempotence - replaced
      register: result
      cisco.nxos.nxos_l3_interfaces: *id004

    - ansible.builtin.assert:
        that:
          - result.changed == false
          - result.commands|length == 0

    - ansible.builtin.include_tasks: _remove_config.yaml

    - name: Setup1 - overidden
      ignore_errors: true
      cisco.nxos.nxos_config: &id007
        lines:
          - "no system default switchport"
          - "default interface {{ item }}"
          - "interface {{ item }}"
          - "  no switchport"
      loop:
        - "{{ test_int1 }}"
        - "{{ test_int2 }}"
        - "{{ test_int3 }}"

    - name: Setup3 - overidden
      cisco.nxos.nxos_config:
        lines:
          - "interface {{ test_int1 }}"
          - "  ip address 192.168.10.2/24 tag 5"
          - "  evpn multisite fabric-tracking"
          - "interface {{ test_int2 }}"
          - "  ip address 10.1.1.1/24"
          - "  evpn multisite dci-tracking"

    - name: Gather l3_interfaces facts
      cisco.nxos.nxos_facts: &id005
        gather_subset:
          - "!all"
          - "!min"
        gather_network_resources: l3_interfaces

    - name: Store reserved interface IP configuration
      ansible.builtin.set_fact:
        mgmt: "{{ ansible_facts.network_resources.l3_interfaces|selectattr('name', 'equalto', rsvd_intf)|list }}"
        overriden_config:
          - name: "{{ test_int3 }}"
            ipv4:
              - address: 10.1.1.3/24
            evpn_multisite_tracking: dci-tracking

    - name: Overridden
      register: result
      cisco.nxos.nxos_l3_interfaces: &id006
        config: "{{ overriden_config + mgmt }}"
        state: overridden

    - ansible.builtin.assert:
        that:
          - result.before|symmetric_difference(ansible_facts.network_resources.l3_interfaces) == []
          - result.changed == true
          - "'interface {{ test_int1 }}' in result.commands"
          - "'no ip address' in result.commands"
          - "'no evpn multisite fabric-tracking' in result.commands"
          - "'interface {{ test_int2 }}' in result.commands"
          - "'no ip address' in result.commands"
          - "'no evpn multisite dci-tracking' in result.commands"
          - "'interface {{ test_int3 }}' in result.commands"
          - "'ip address 10.1.1.3/24' in result.commands"
          - "'evpn multisite dci-tracking' in result.commands"
          - result.commands|length == 9

    - name: Gather l3_interfaces post facts
      cisco.nxos.nxos_facts: *id005

    - ansible.builtin.assert:
        that:
          - result.after|symmetric_difference(ansible_facts.network_resources.l3_interfaces) == []

    - name: Idempotence - overridden
      register: result
      cisco.nxos.nxos_l3_interfaces: *id006

    - ansible.builtin.assert:
        that:
          - result.changed == false
          - result.commands|length == 0

    - name: Teardown - overdidden
      ignore_errors: true
      cisco.nxos.nxos_config: *id007
      loop:
        - "{{ test_int1 }}"
        - "{{ test_int2 }}"
        - "{{ test_int3 }}"

    - name: Gather pre-facts
      cisco.nxos.nxos_facts:
        gather_subset:
          - "!all"
          - "!min"
        gather_network_resources: l3_interfaces

    # Interfaces used here doesn't actually exist on the device
    - name: Use rendered state to convert task input to device specific commands
      register: result
      cisco.nxos.nxos_l3_interfaces:
        config:
          - name: Ethernet1/800
            ipv4:
              - address: 192.168.1.100/24
                tag: 5
              - address: 10.1.1.1/24
                secondary: true
                tag: 10
            evpn_multisite_tracking: fabric-tracking
          - name: Ethernet1/800
            ipv6:
              - address: fd5d:12c9:2201:2::1/64
                tag: 6
            evpn_multisite_tracking: dci-tracking
        state: rendered

    - ansible.builtin.assert:
        that: "{{ rendered_multi | symmetric_difference(result['rendered']) |length==0 }}"

    - name: Gather l3_interfaces facts from the device and assert that its empty
      register: result
      cisco.nxos.nxos_l3_interfaces:
        state: gathered

    - name: Make sure that rendered task actually did not make any changes to the device
      ansible.builtin.assert:
        that: "{{ result['gathered']|symmetric_difference(ansible_facts.network_resources.l3_interfaces) == [] }}"

    - ansible.builtin.include_tasks: _remove_config.yaml

    # Interfaces used in the task don't actually exist on the appliance
    - name: Use parsed state to convert externally supplied configuration to structured format
      register: result
      cisco.nxos.nxos_l3_interfaces:
        running_config: |
          interface Ethernet1/800
            ip address 192.168.1.100/24 tag 5
            ip address 10.1.1.1/24 secondary tag 10
            no ip redirects
            evpn multisite fabric-tracking
          interface Ethernet1/801
            ipv6 address fd5d:12c9:2201:2::1/64 tag 6
            ip unreachables
            evpn multisite dci-tracking
          interface mgmt0
            ip address dhcp
            vrf member management
        state: parsed

    - ansible.builtin.assert:
        that: "{{ parsed_multi | symmetric_difference(result['parsed']) |length==0 }}"

  when: multiout is not search("Invalid command")

- name: Disable NV overlay EVPN
  when: platform is search('N9K')
  ignore_errors: true
  cisco.nxos.nxos_config:
    commands:
      - no nv overlay evpn
    match: none

- name: Disable 'feature nv overlay'
  ignore_errors: true
  cisco.nxos.nxos_feature:
    feature: nve
    state: disabled

- ansible.builtin.debug:
    msg: END connection={{ ansible_connection }} nxos_l3_interfaces multisite test
