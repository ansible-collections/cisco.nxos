---
- ansible.builtin.debug:
    msg: START connection={{ ansible_connection }} nxos_l2_interface sanity test

- name: Set a fact for 'intname'
  ansible.builtin.set_fact:
    intname: "{{ nxos_int1 }}"

- name: Interface selected for this test
  ansible.builtin.debug:
    msg: "{{ intname }}"

- name: Setup interface
  ignore_errors: true
  cisco.nxos.nxos_config: &id009
    lines:
      - default interface {{ intname }}

- name: Setup - ensure interface is layer2
  cisco.nxos.nxos_interface:
    interface: "{{ intname }}"
    mode: layer2

- name: Setup vlans
  cisco.nxos.nxos_vlan:
    vlan_range: 5-10,20

- block:
    - name: Ensure interface is in its default switchport state
      cisco.nxos.nxos_l2_interface: &id008
        name: "{{ intname }}"
        state: unconfigured

    - name: Ensure interface is configured for access VLAN 20
      register: result
      cisco.nxos.nxos_l2_interface: &id001
        name: "{{ intname }}"
        mode: access
        access_vlan: 20

    - ansible.builtin.assert: &id002
        that:
          - result.changed == true

    - name: Sleep for 2 seconds on fretta platform
      ansible.builtin.wait_for: timeout=2
      when: platform is match("N9K-F")

    - name: Access VLAN idempotence
      register: result
      cisco.nxos.nxos_l2_interface: *id001

    - ansible.builtin.assert: &id004
        that:
          - result.changed == false

    - name: Ensure interface only has vlans 5-10 as trunk vlans
      register: result
      cisco.nxos.nxos_l2_interface: &id003
        name: "{{ intname }}"
        mode: trunk
        native_vlan: 10
        trunk_allowed_vlans: 5-10

    - ansible.builtin.assert: *id002

    - name: Trunk VLAN idempotence
      register: result
      cisco.nxos.nxos_l2_interface: *id003

    - ansible.builtin.assert: *id004

    - name: Ensure interface is a trunk port and ensure 2-50 are being tagged (doesn't mean others aren't also being tagged)
      register: result
      cisco.nxos.nxos_l2_interface: &id005
        name: "{{ intname }}"
        mode: trunk
        native_vlan: 10
        trunk_vlans: 2-50

    - ansible.builtin.assert: *id002

    - name: Tag VLAN idempotence
      register: result
      cisco.nxos.nxos_l2_interface: *id005

    - ansible.builtin.assert: *id004

    - name: Remove full trunk VLAN range 2-50
      register: result
      cisco.nxos.nxos_l2_interface: &id006
        name: "{{ intname }}"
        mode: trunk
        trunk_vlans: 2-50
        state: absent

    - ansible.builtin.assert: *id002

    - name: Check idempotence remove full trunk VLAN range 2-50
      register: result
      cisco.nxos.nxos_l2_interface: *id006

    - ansible.builtin.assert: *id004

    - name: Reconfigure interface trunk port and ensure 2-50 are being tagged
      register: result
      cisco.nxos.nxos_l2_interface: *id005

    - ansible.builtin.assert: *id002

    - name: Check idempotence reconfigure interface trunk port and ensure 2-50 are being tagged
      register: result
      cisco.nxos.nxos_l2_interface: *id005

    - ansible.builtin.assert: *id004

    - name: Remove partial trunk VLAN range 30-4094 are removed
      register: result
      cisco.nxos.nxos_l2_interface: &id007
        name: "{{ intname }}"
        mode: trunk
        trunk_vlans: 30-4094
        state: absent

    - ansible.builtin.assert: *id002

    - name: Check idempotence remove partial trunk VLAN range 30-4094 are removed
      register: result
      cisco.nxos.nxos_l2_interface: *id007

    - ansible.builtin.assert: *id004

    - name: Put interface default state
      register: result
      cisco.nxos.nxos_l2_interface: *id008

    - ansible.builtin.assert: *id002

    - name: Default state idempotence
      register: result
      cisco.nxos.nxos_l2_interface: *id008

    - ansible.builtin.assert: *id004
  always:
    - name: Remove vlans
      ignore_errors: true
      cisco.nxos.nxos_vlan:
        vlan_range: 5-10,20
        state: absent

    - name: Default interface
      ignore_errors: true
      cisco.nxos.nxos_config: *id009

- ansible.builtin.debug:
    msg: END connection={{ ansible_connection }} nxos_l2_interface sanity test
