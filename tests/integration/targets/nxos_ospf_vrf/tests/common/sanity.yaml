---
- ansible.builtin.debug:
    msg: START connection={{ ansible_connection }} nxos_ospf_vrf sanity test

- name: Set a fact for 'def_met_default'
  ansible.builtin.set_fact:
    def_met_default: default
  when: imagetag is not search("I7")

- name: "Setup: disable features for initial cleanup"
  loop:
    - ospf
    - bfd
  ignore_errors: true
  cisco.nxos.nxos_feature:
    feature: "{{ item }}"
    state: disabled

- name: Enable features
  loop:
    - ospf
    - bfd
  cisco.nxos.nxos_feature:
    feature: "{{ item }}"
    state: enabled

- block:
    - name: Configure OSPF VRF
      register: result
      cisco.nxos.nxos_ospf_vrf: &id001
        ospf: 1
        router_id: 192.0.2.1
        timer_throttle_spf_start: 50
        timer_throttle_spf_hold: 1000
        timer_throttle_spf_max: 2000
        timer_throttle_lsa_start: 60
        timer_throttle_lsa_hold: 1100
        timer_throttle_lsa_max: 3000
        vrf: test
        bfd: enable
        passive_interface: true
        state: present

    - ansible.builtin.assert: &id002
        that:
          - result.changed == true

    - name: Check idempotence
      register: result
      cisco.nxos.nxos_ospf_vrf: *id001

    - ansible.builtin.assert: &id004
        that:
          - result.changed == false

    - name: Configure OSPF VRF
      register: result
      cisco.nxos.nxos_ospf_vrf: &id003
        ospf: 2
        auto_cost: 5000
        timer_throttle_spf_hold: 1100
        timer_throttle_lsa_hold: 2220
        timer_throttle_lsa_max: 2222
        default_metric: 1000
        log_adjacency: log
        vrf: default
        bfd: disable
        passive_interface: true
        state: present

    - ansible.builtin.assert: *id002

    - name: Check idempotence
      register: result
      cisco.nxos.nxos_ospf_vrf: *id003

    - ansible.builtin.assert: *id004

    - name: Configure OSPF VRF
      register: result
      cisco.nxos.nxos_ospf_vrf: &id005
        ospf: 2
        auto_cost: default
        default_metric: "{{def_met_default|default(omit)}}"
        log_adjacency: default
        timer_throttle_spf_hold: default
        passive_interface: false
        vrf: default
        state: present

    - ansible.builtin.assert: *id002

    - name: Check idempotence
      register: result
      cisco.nxos.nxos_ospf_vrf: *id005

    - ansible.builtin.assert: *id004

    - name: Unconfigure OSPF VRF
      register: result
      cisco.nxos.nxos_ospf_vrf: &id006
        ospf: 2
        vrf: default
        state: absent

    - ansible.builtin.assert: *id002

    - name: Check idempotence
      register: result
      cisco.nxos.nxos_ospf_vrf: *id006

    - ansible.builtin.assert: *id004
      when: def_met_default is defined

    - name: Unconfigure OSPF VRF
      register: result
      cisco.nxos.nxos_ospf_vrf: &id007
        ospf: 1
        vrf: test
        state: absent

    - ansible.builtin.assert: *id002

    - name: Check idempotence
      register: result
      cisco.nxos.nxos_ospf_vrf: *id007

    - ansible.builtin.assert: *id004
      when: def_met_default is defined
  always:
    - name: Disable features
      loop:
        - ospf
        - bfd
      ignore_errors: true
      cisco.nxos.nxos_feature:
        feature: "{{ item }}"
        state: disabled

- ansible.builtin.debug:
    msg: END connection={{ ansible_connection }} nxos_ospf_vrf sanity test
