---
- ansible.builtin.debug:
    msg: START connection={{ ansible_connection }} nxos_udld_interface sanity test

- name: Set a fact for 'udld_run'
  ansible.builtin.set_fact:
    udld_run: true

- name: Set a fact for 'udld_enable'
  ansible.builtin.set_fact:
    udld_enable: true

- name: Set a fact for 'udld_run'
  ansible.builtin.set_fact:
    udld_run: false
  when: ((platform is search('N9K-F')) and (imagetag and (imagetag is version_compare('F3', 'lt'))))

- name: Set a fact for 'udld_run'
  ansible.builtin.set_fact:
    udld_run: false
  when: titanium

- name: Set a fact for 'udld_enable'
  ansible.builtin.set_fact:
    udld_enable: false
  when: imagetag and imagetag is search("N1")

- name: Set a fact for 'intname'
  ansible.builtin.set_fact:
    intname: "{{ nxos_int1 }}"

- block:
    - name: Enable 'feature udld'
      cisco.nxos.nxos_feature:
        feature: udld
        state: enabled

    - name: Put the interface into default state
      cisco.nxos.nxos_config:
        commands:
          - default interface {{intname}}
        match: none

    - name: Ensure interface is configured to be in aggressive mode
      register: result
      cisco.nxos.nxos_udld_interface: &id001
        interface: "{{ intname }}"
        mode: aggressive
        state: present

    - ansible.builtin.assert: &id002
        that:
          - result.changed == true

    - name: Conf1 idempotence
      register: result
      cisco.nxos.nxos_udld_interface: *id001

    - ansible.builtin.assert: &id004
        that:
          - result.changed == false

    - block:
        - name: ensure interface has mode enabled
          register: result
          cisco.nxos.nxos_udld_interface: &id003
            interface: "{{ intname }}"
            mode: enabled
            state: present

        - assert: *id002

        - name: Conf2 Idempotence
          register: result
          cisco.nxos.nxos_udld_interface: *id003

        - assert: *id004

        - name: ensure interface has mode aggressive
          register: result
          cisco.nxos.nxos_udld_interface: *id001

        - assert: *id002

        - name: Conf1 Idempotence
          register: result
          cisco.nxos.nxos_udld_interface: *id001

        - assert: *id004

        - name: ensure interface has mode disabled
          register: result
          cisco.nxos.nxos_udld_interface: &id005
            interface: "{{ intname }}"
            mode: disabled
            state: present

        - assert: *id002

        - name: Conf3 Idempotence
          register: result
          cisco.nxos.nxos_udld_interface: *id005

        - assert: *id004
      when: udld_enable

    - name: Remove the configuration
      cisco.nxos.nxos_udld_interface:
        interface: "{{ intname }}"
        mode: enabled
        state: absent
  when: udld_run
  always:
    - name: Disable udld
      ignore_errors: true
      cisco.nxos.nxos_feature:
        feature: udld
        state: disabled

- ansible.builtin.debug:
    msg: END connection={{ ansible_connection }} nxos_udld_interface sanity test
