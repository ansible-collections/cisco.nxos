---
- ansible.builtin.debug:
    msg: START connection={{ ansible_connection }} nxos_acl sanity test

- name: Set a fact for 'time_range'
  ansible.builtin.set_fact:
    time_range: ans-range
  when: platform is not search('N35|N5K|N6K')

- name: "Setup: cleanup possibly existing acl."
  ignore_errors: true
  cisco.nxos.nxos_acl: &id012
    name: TEST_ACL
    seq: 10
    state: delete_acl

- name: Configure ace10
  register: result
  cisco.nxos.nxos_acl: &id001
    name: TEST_ACL
    seq: 10
    action: permit
    proto: tcp
    src: 192.0.2.1/24
    src_port_op: range
    src_port1: 1900
    src_port2: 1910
    ack: enable
    dscp: af43
    dest: any
    dest_port_op: neq
    dest_port1: 1899
    urg: enable
    psh: enable
    established: enable
    log: enable
    fin: enable
    rst: enable
    syn: enable
    time_range: "{{time_range|default(omit)}}"
    state: present

- ansible.builtin.assert: &id002
    that:
      - result.changed == true

- name: Check idempotence
  register: result
  cisco.nxos.nxos_acl: *id001

- ansible.builtin.assert: &id004
    that:
      - result.changed == false

- name: Change ace10
  register: result
  cisco.nxos.nxos_acl: &id003
    name: TEST_ACL
    seq: 10
    action: deny
    proto: tcp
    src: 192.0.2.1/24
    src_port_op: range
    src_port1: 1900
    src_port2: 1910
    ack: enable
    dscp: af43
    dest: any
    dest_port_op: neq
    dest_port1: 1899
    urg: enable
    psh: enable
    established: enable
    log: enable
    fin: enable
    rst: enable
    syn: enable
    time_range: "{{time_range|default(omit)}}"
    state: present

- ansible.builtin.assert: *id002

- name: Check idempotence
  register: result
  cisco.nxos.nxos_acl: *id003

- ansible.builtin.assert: *id004

- name: Ace remark
  register: result
  cisco.nxos.nxos_acl: &id005
    name: TEST_ACL
    seq: 20
    action: remark
    remark: test_remark
    state: present

- ansible.builtin.assert: *id002

- name: Check idempotence
  register: result
  cisco.nxos.nxos_acl: *id005

- ansible.builtin.assert: *id004

- name: Change remark
  register: result
  cisco.nxos.nxos_acl: &id006
    name: TEST_ACL
    seq: 20
    action: remark
    remark: changed_remark
    state: present

- ansible.builtin.assert: *id002

- name: Check idempotence
  register: result
  cisco.nxos.nxos_acl: *id006

- ansible.builtin.assert: *id004

- name: Ace 30
  register: result
  cisco.nxos.nxos_acl: &id007
    name: TEST_ACL
    seq: 30
    action: deny
    proto: 24
    src: any
    dest: any
    fragments: enable
    precedence: network
    state: present

- ansible.builtin.assert: *id002

- name: Check idempotence
  register: result
  cisco.nxos.nxos_acl: *id007

- ansible.builtin.assert: *id004

- name: Change ACE 30 options
  register: result
  cisco.nxos.nxos_acl: &id008
    name: TEST_ACL
    seq: 30
    action: deny
    proto: 24
    src: any
    dest: any
    precedence: network
    state: present

- ansible.builtin.assert: *id002

- name: Check idempotence
  register: result
  cisco.nxos.nxos_acl: *id008

- ansible.builtin.assert: *id004

- name: Ace 40
  register: result
  cisco.nxos.nxos_acl: &id009
    name: TEST_ACL
    seq: 40
    action: permit
    proto: udp
    src: any
    src_port_op: neq
    src_port1: 1200
    dest: any
    precedence: network
    state: present

- ansible.builtin.assert: *id002

- name: Check idempotence
  register: result
  cisco.nxos.nxos_acl: *id009

- ansible.builtin.assert: *id004

- name: Change ACE 40
  register: result
  cisco.nxos.nxos_acl: &id010
    name: TEST_ACL
    seq: 40
    action: permit
    proto: udp
    src: any
    dest: any
    precedence: network
    state: present

- ansible.builtin.assert: *id002

- name: Check idempotence
  register: result
  cisco.nxos.nxos_acl: *id010

- ansible.builtin.assert: *id004

- name: Remove ACE 30
  register: result
  cisco.nxos.nxos_acl: &id011
    name: TEST_ACL
    seq: 30
    state: absent

- ansible.builtin.assert: *id002

- name: Check idempotence
  register: result
  cisco.nxos.nxos_acl: *id011

- ansible.builtin.assert: *id004

- name: Remove ACL
  register: result
  cisco.nxos.nxos_acl: *id012

- ansible.builtin.assert: *id002

- name: Check idempotence
  register: result
  cisco.nxos.nxos_acl: *id012

- ansible.builtin.assert: *id004

- ansible.builtin.debug:
    msg: END connection={{ ansible_connection }} nxos_acl sanity test
