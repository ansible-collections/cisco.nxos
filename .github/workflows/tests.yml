---
name: "CI"

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:  # yamllint disable-line rule:truthy
  pull_request:
    branches: [main]
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  build-import:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: NilashishC/ansible-content-actions/.github/actions/build-import@actions_refactor

  build-tox-matrix:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: NilashishC/ansible-content-actions/.github/actions/generate-tox-ansible-matrix@actions_refactor  # yamllint disable-line rule:line-length
        id: build-matrix-unit
        with:
          scope: unit

      - uses: NilashishC/ansible-content-actions/.github/actions/generate-tox-ansible-matrix@actions_refactor  # yamllint disable-line rule:line-length
        id: build-matrix-sanity
        with:
          scope: sanity
    outputs:
      unit-envlist: "${{ steps.build-matrix-unit.outputs.envlist }}"
      sanity-envlist: "${{ steps.build-matrix-sanity.outputs.envlist }}"

  run-unit-galaxy:
    needs: build-tox-matrix
    strategy:
      fail-fast: false
      matrix:
        entry: "${{ fromJson(needs.build-tox-matrix.outputs.unit-envlist) }}"
    name: "${{ matrix.entry.name }}"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: NilashishC/ansible-content-actions/.github/actions/run-unit-galaxy@actions_refactor  # yamllint disable-line rule:line-length
        with:
          test-env: "${{ matrix.entry.name }}"
  run-sanity:
    needs: build-tox-matrix
    strategy:
      fail-fast: false
      matrix:
        entry: "${{ fromJson(needs.build-tox-matrix.outputs.sanity-envlist) }}"
    name: "${{ matrix.entry.name }}"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: NilashishC/ansible-content-actions/.github/actions/run-sanity@actions_refactor  # yamllint disable-line rule:line-length
        with:
          test-env: "${{ matrix.entry.name }}"

  ansible-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: NilashishC/ansible-content-actions/.github/actions/run-ansible-lint@actions_refactor  # yamllint disable-line rule:line-length

  unit-source:
    uses: ansible-network/github_actions/.github/workflows/unit_source.yml@main
    with:
      collection_pre_install: >-
        git+https://github.com/ansible-collections/ansible.utils.git
        git+https://github.com/ansible-collections/ansible.netcommon.git

  all_green:
    if: ${{ always() }}
    needs:
      - build-import
      - run-sanity
      - run-unit-galaxy
      - unit-source
      - ansible-lint
    runs-on: ubuntu-latest
    steps:
      - run: >-
          python -c "assert 'failure' not in
          set([
          '${{ needs.build-import.result }}',
          '${{ needs.run-sanity.result }}',
          '${{ needs.run-unit-galaxy.result }}'
          '${{ needs.ansible-lint.result }}'
          '${{ needs.unit-source.result }}'
          ])"
